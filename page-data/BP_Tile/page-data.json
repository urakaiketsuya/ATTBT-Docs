{"componentChunkName":"component---src-templates-blog-post-js","path":"/BP_Tile/","result":{"data":{"site":{"siteMetadata":{"title":"Advanced Turn Based Tile Toolkit"}},"markdownRemark":{"id":"0fbf7206-48ac-5b6c-90dd-f50f4ff009a1","excerpt":"BP_Tile Path: /Game/AdvancedTurnBasedTileToolkit/Core/Tiles/BP_Tile .. cpp:class:: BP_Tile : public Actor The blueprint on which all tiles are based. To createâ€¦","html":"<h1>BP_Tile</h1>\n<p>Path: /Game/AdvancedTurnBasedTileToolkit/Core/Tiles/BP_Tile</p>\n<p>.. cpp:class:: BP_Tile : public Actor</p>\n<p>The blueprint on which all tiles are based. To create a new tile, make a child of this blueprint or a duplicate of any other tile blueprint. Handles grid positioning and snapping and interacts with Grid Manager for instantiating meshes.</p>\n<p>.. cpp:function:: void Construction_Script(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Construction script, the place to spawn components and do other setup. @note Name used in CreateBlueprint function\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Event, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Construction script, the place to spawn components and do other setup. @note Name used in CreateBlueprint function\n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: exec AddEdgeCostToGridEdgesArray(exec then, int Index, int Cost)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Index: \n  :type Index: int\n  :arg Cost: \n  :type Cost: int\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec MakeEdgeCostsArray(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Adds all edge costs from the EdgeCost struct to the EdgeCosts array\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  Adds all edge costs from the EdgeCost struct to the EdgeCosts array\n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, exec) MakeBlockedCornerIndexesArray(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec Vector_to_Index_Interface(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec Get_Vector_Array_Interface(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec MeshToInstance(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec PlaceActorAtAnchor(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:member:: BP_GridAnchor BP_GridAnchor</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: SceneComponent DefaultSceneRoot</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: FTileEdges EdgeCost</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  For Square Tiles: 0 = Wall, 1 = Walkable, 2+= walkable with cost</code></pre></div>\n<p>.. cpp:member:: bool bInstantiate</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Can this actor be instantiated?</code></pre></div>\n<p>.. cpp:member:: int InstanceID</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  DO NOT EDIT: Part of the Instantiate experimental system</code></pre></div>\n<p>.. cpp:member:: bool bInstanceVisibility</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  DO NOT EDIT: Part of the Instantiate experimental system</code></pre></div>\n<p>.. cpp:member:: Array EdgeCosts</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: DO NOT EDIT\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible\n  Lifetime Condition: None\n\n  Holds grid indexes and costs of all edges. Is normally populated by looking at the EdgeCost struct.</code></pre></div>\n<p>.. cpp:member:: Array BlockedCornerIndexes</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: DO NOT EDIT\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible\n  Lifetime Condition: None\n\n  Holds the indexes of tiles on either side of a corner. Marked so edges between these will be removed if the EdgeCost of the corner between these is set to -1</code></pre></div>\n<p>.. cpp:member:: Array Edges</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: DO NOT EDIT\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible\n  Lifetime Condition: None\n\n  Indexes of all edges of this tile</code></pre></div>\n<p>.. cpp:member:: Array CustomEdges</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Expose On Spawn\n  Lifetime Condition: None\n\n  Any edges added to this array will be added as edges to this tile during setup.</code></pre></div>\n<p>.. cpp:member:: int SimpleCost</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  If any of the simple pathfinding types are used, this value determines the universal cost of entering this tile, no matter from what direction. 0 = impassable.</code></pre></div>\n<p>.. cpp:member:: Array SpecialEdges</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int GridIndex</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: BP_GridManager GridManagerRef</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>","frontmatter":{"title":"BP_Tile","date":"September 28, 2024","description":" The blueprint on which all tiles are based. To create a new tile, make a child of this blueprint or a duplicate of any other tile blueprint. Handles grid positioning and snapping and interacts with Grid Manager for instantiating meshes."}},"previous":{"fields":{"slug":"/BP_Unit/"},"frontmatter":{"title":"BP_Unit"}},"next":{"fields":{"slug":"/BP_TurnManager/"},"frontmatter":{"title":"BP_TurnManager"}}},"pageContext":{"id":"0fbf7206-48ac-5b6c-90dd-f50f4ff009a1","previousPostId":"6eb35f41-f82b-5fec-9923-c9d6dba56634","nextPostId":"48aa36cc-737d-50e3-8752-a9a6347a8727"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}