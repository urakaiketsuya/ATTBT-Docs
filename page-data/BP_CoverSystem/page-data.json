{"componentChunkName":"component---src-templates-blog-post-js","path":"/BP_CoverSystem/","result":{"data":{"site":{"siteMetadata":{"title":"Advanced Turn Based Tile Toolkit"}},"markdownRemark":{"id":"0a1e5004-d703-578a-8b48-72094772d0bf","excerpt":"BP_CoverSystem Path: /Game/AdvancedTurnBasedTileToolkit/Core/Grid/BP_CoverSystem .. cpp:class:: BP_CoverSystem : public ActorComponent When added to the Gridâ€¦","html":"<h1>BP_CoverSystem</h1>\n<p>Path: /Game/AdvancedTurnBasedTileToolkit/Core/Grid/BP_CoverSystem</p>\n<p>.. cpp:class:: BP_CoverSystem : public ActorComponent</p>\n<p>When added to the Grid Manager, generates the GridCoverTiles variable using the CoverTrace channel, storing cover values based on the blocking height of meshes blocking this channel. Is utilized by abilities (such as BP_Ability_LaserRifle) to modify accuracy.</p>\n<p>.. cpp:function:: (exec, exec) GenerateCoverAtGridIndex(exec then, int GridIndex)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Runs CoverTraces at all straight edges of all tiles and stores cover values based on whether a high trace is blocked (full cover), a lower one (half cover) or not blocked at all (no cover)\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  Runs CoverTraces at all straight edges of all tiles and stores cover values based on whether a high trace is blocked (full cover), a lower one (half cover) or not blocked at all (no cover)\n\n  :arg then: \n  :type then: exec\n  :arg GridIndex: \n  :type GridIndex: int\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, double) FindTargetCoverRelativeToSource(exec then, int SourceIndex, int TargetIndex)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Checks if the target index has cover relative to the source index\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Checks if the target index has cover relative to the source index\n\n  :arg then: \n  :type then: exec\n  :arg SourceIndex: \n  :type SourceIndex: int\n  :arg TargetIndex: \n  :type TargetIndex: int\n  :returns execute: \n  :rtype execute: exec\n  :returns Cover:  (Default: 0.0)\n  :rtype Cover: double</code></pre></div>\n<p>.. cpp:function:: (exec, bool, double) CalculateHitChance(exec then, double BaseHitChance, double RangeModifier, double OtherModifier, int SourceIndex, int TargetIndex, bool DiamondShaped)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Finds the chance to hit a tile from another, based on cover, distance and accuracy\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  Finds the chance to hit a tile from another, based on cover, distance and accuracy\n\n  :arg then: \n  :type then: exec\n  :arg BaseHitChance: \n  :type BaseHitChance: double\n  :arg RangeModifier: \n  :type RangeModifier: double\n  :arg OtherModifier: \n  :type OtherModifier: double\n  :arg SourceIndex: \n  :type SourceIndex: int\n  :arg TargetIndex: \n  :type TargetIndex: int\n  :arg DiamondShaped: \n  :type DiamondShaped: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns Hit:  (Default: false)\n  :rtype Hit: bool\n  :returns Hit_Chance:  (Default: 0.0)\n  :rtype Hit_Chance: double</code></pre></div>\n<p>.. cpp:function:: (exec, double) AssessTileDangerValue(exec then, int Index, EFaction Faction=NewEnumerator3)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Returns a safety value based on how many hostile units can see it and if the tile gives cover from these units\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Returns a safety value based on how many hostile units can see it and if the tile gives cover from these units\n\n  :arg then: \n  :type then: exec\n  :arg Index: \n  :type Index: int\n  :arg Faction:  (Default: NewEnumerator3)\n  :type Faction: EFaction\n  :returns execute: \n  :rtype execute: exec\n  :returns Value:  (Default: 0.0)\n  :rtype Value: double</code></pre></div>\n<p>.. cpp:function:: (exec, Transform, Transform) GetCoverMesheTransformsAroundIndex(exec then, int Index)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Returns all transforms around a tile based on adjacent tile cover values, used for spawning cover meshes in other blueprints\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Returns all transforms around a tile based on adjacent tile cover values, used for spawning cover meshes in other blueprints\n\n  :arg then: \n  :type then: exec\n  :arg Index: \n  :type Index: int\n  :returns execute: \n  :rtype execute: exec\n  :returns FullCoverTransforms: \n  :rtype FullCoverTransforms: Transform\n  :returns HalfCoverTransforms: \n  :rtype HalfCoverTransforms: Transform</code></pre></div>\n<p>.. cpp:function:: exec GenerateCoverForGridIndexes(exec then, int GridIndexes)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg GridIndexes: \n  :type GridIndexes: int\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec UpdateCoverInRange(exec then, int OriginIndex, int Range)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg OriginIndex: \n  :type OriginIndex: int\n  :arg Range: \n  :type Range: int\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: void GenerateCoverForEntireGrid(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void Begin_Play(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Blueprint implementable event for when the component is beginning play, called before its owning actor's BeginPlay or when the component is dynamically created if the Actor has already BegunPlay.\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Event, Blueprint Event\n\n  Blueprint implementable event for when the component is beginning play, called before its owning actor's BeginPlay or when the component is dynamically created if the Actor has already BegunPlay.\n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:member:: PointerToUberGraphFrame UberGraphFrame</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: \n\n  Access Modifier: \n  Flags: Zero Constructor, Transit, Duplicate Transient\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: BP_GridManager GridManagerRef</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double FullCoverHeight</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double HalfCoverHeight</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double FullCoverAmount</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double HalfCoverAmount</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: HierarchicalInstancedStaticMeshComponent CoverHISM</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Instanced Reference, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: StaticMesh CoverMesh</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: HierarchicalInstancedStaticMeshComponent CoverHalfHISM</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Instanced Reference, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: StaticMesh CoverHalfMesh</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Map GridCoverTiles</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int DangerCheckRange</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>","frontmatter":{"title":"BP_CoverSystem","date":"September 28, 2024","description":" When added to the Grid Manager, generates the GridCoverTiles variable using the CoverTrace channel, storing cover values based on the blocking height of meshes blocking this channel. Is utilized by abilities (such as BP_Ability_LaserRifle) to modify accuracy."}},"previous":{"fields":{"slug":"/BP_Action_UpdateAbilityBox/"},"frontmatter":{"title":"BP_Action_UpdateAbilityBox"}},"next":{"fields":{"slug":"/BP_Action_SpawnEmitter/"},"frontmatter":{"title":"BP_Action_SpawnEmitter"}}},"pageContext":{"id":"0a1e5004-d703-578a-8b48-72094772d0bf","previousPostId":"fca99b11-ec72-5905-bb67-bf3af7db1604","nextPostId":"cb0dd90e-1ed5-5b2d-88f7-dbed7f80186d"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}