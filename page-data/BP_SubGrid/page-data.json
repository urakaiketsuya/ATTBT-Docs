{"componentChunkName":"component---src-templates-blog-post-js","path":"/BP_SubGrid/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"d8b54a58-02fe-5b51-a0ec-43f10fa3c2b3","excerpt":"BP_SubGrid Path: /Game/AdvancedTurnBasedTileToolkit/Core/Grid/BP_SubGrid .. cpp:class:: BP_SubGrid : public Actor Creates grid sections that are added to BPâ€¦","html":"<h1>BP_SubGrid</h1>\n<p>Path: /Game/AdvancedTurnBasedTileToolkit/Core/Grid/BP_SubGrid</p>\n<p>.. cpp:class:: BP_SubGrid : public Actor</p>\n<p>Creates grid sections that are added to BP_GridManager on begin play as if they were part of BP_GridManager. Useful as an optimization measure if you have a very sparse grid instead of simply resizing BP_GridManager. Note that subgrids should not overlap any tiles of the grid manager or other subgrids. For overlapping levels use meshes blocking PathTrace.</p>\n<p>.. cpp:function:: void Construction_Script(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Construction script, the place to spawn components and do other setup. @note Name used in CreateBlueprint function\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Event, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Construction script, the place to spawn components and do other setup. @note Name used in CreateBlueprint function\n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: (exec, exec) PreventSubgridOverlap(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Only prevents overlap of the grid manager. note that subgrids also should not overlap other subgrids\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  Only prevents overlap of the grid manager. note that subgrids also should not overlap other subgrids\n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec SpawnGridMeshes(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec AdjustHeightmapBounds(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:member:: HierarchicalInstancedStaticMeshComponent DefaultTile</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: BoxComponent HeightmapBounds</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: BP_GridAnchor BP_GridAnchor</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: SceneComponent DefaultSceneRoot</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int GridSizeX</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int GridSizeY</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: BP_GridManager GridManagerRef</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int RelativeGridIndex</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: StaticMesh TileMeshOverride</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bSpawnGridMeshes</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bShowBounds</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>","frontmatter":{"title":"BP_SubGrid","date":"September 28, 2024","description":" Creates grid sections that are added to BP_GridManager on begin play as if they were part of BP_GridManager. Useful as an optimization measure if you have a very sparse grid instead of simply resizing BP_GridManager. Note that subgrids should not overlap any tiles of the grid manager or other subgrids. For overlapping levels use meshes blocking PathTrace."}},"previous":{"fields":{"slug":"/BP_Unit/"},"frontmatter":{"title":"BP_Unit"}},"next":{"fields":{"slug":"/BP_StatusEffect_Woke/"},"frontmatter":{"title":"BP_StatusEffect_Woke"}}},"pageContext":{"id":"d8b54a58-02fe-5b51-a0ec-43f10fa3c2b3","previousPostId":"6eb35f41-f82b-5fec-9923-c9d6dba56634","nextPostId":"88f4038b-c795-5e3a-8d53-5757e554a901"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}