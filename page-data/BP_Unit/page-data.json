{"componentChunkName":"component---src-templates-blog-post-js","path":"/BP_Unit/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"6eb35f41-f82b-5fec-9923-c9d6dba56634","excerpt":"BP_Unit Path: /Game/AdvancedTurnBasedTileToolkit/Core/Units/BP_Unit .. cpp:class:: BP_Unit : public Actor The parent class for all Unit actors. Is intended toâ€¦","html":"<h1>BP_Unit</h1>\n<p>Path: /Game/AdvancedTurnBasedTileToolkit/Core/Units/BP_Unit</p>\n<p>.. cpp:class:: BP_Unit : public Actor</p>\n<p>The parent class for all Unit actors. Is intended to be invisible and work with data and gameplay logic. Visualizing the unit in game is handled bt a Puppet actor, which is spawned by the Unit at runtime.</p>\n<p>.. cpp:function:: void Construction_Script(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Construction script, the place to spawn components and do other setup. @note Name used in CreateBlueprint function\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Event, Blueprint Callable, Blueprint Event\n\n  Construction script, the place to spawn components and do other setup. @note Name used in CreateBlueprint function\n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: (exec, exec) RefreshUnit(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Sets current AP to the same as max and sets exhausted to false. Run to make unit abailable for use in a new turn.\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  Sets current AP to the same as max and sets exhausted to false. Run to make unit abailable for use in a new turn.\n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec RemoveUnitFromGame(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Removes all references of this unit from the grid, initiative and the turn manager, making it undetectable by most ATBTT functions. Will in practice kill the unit without having to destroy it. Useful if unit is killed during combat simulations, but these animations have not played out yet, requiring the actor itself to exist for animation purposes, but preventing it from being targeted or selected.\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  Removes all references of this unit from the grid, initiative and the turn manager, making it undetectable by most ATBTT functions. Will in practice kill the unit without having to destroy it. Useful if unit is killed during combat simulations, but these animations have not played out yet, requiring the actor itself to exist for animation purposes, but preventing it from being targeted or selected.\n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, bool, exec, bool) SimulateMove(exec then, int PathIndexes)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Moves the reference of this unit from index to index in the Units Map, checking for any events along the way. Does not physically move the actor, which should be called later.\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  Moves the reference of this unit from index to index in the Units Map, checking for any events along the way. Does not physically move the actor, which should be called later.\n\n  :arg then: \n  :type then: exec\n  :arg PathIndexes: \n  :type PathIndexes: int\n  :returns execute: \n  :rtype execute: exec\n  :returns bInterrupted:  (Default: true)\n  :rtype bInterrupted: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns bInterrupted:  (Default: false)\n  :rtype bInterrupted: bool</code></pre></div>\n<p>.. cpp:function:: exec SetDefaultAlliedFaction(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Makes the unit allied to its own faction and enemy of all other factions by default\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  Makes the unit allied to its own faction and enemy of all other factions by default\n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec HandleUnitSpawning(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Used in construction script for when a unit is spawned. Adds the unit to the grid and initiative order\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  Used in construction script for when a unit is spawned. Adds the unit to the grid and initiative order\n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, exec) ModifyHealth(exec then, double Change, bool bAutoAnimate, double EndDelay=-1.000000)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Reduces health based on input. Kills unit if health drops to 0. If auto animate is selected will automatically queue the appropriate actions for animating the unit being hurt or killed.\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  Reduces health based on input. Kills unit if health drops to 0. If auto animate is selected will automatically queue the appropriate actions for animating the unit being hurt or killed.\n\n  :arg then: \n  :type then: exec\n  :arg Change: \n  :type Change: double\n  :arg bAutoAnimate: \n  :type bAutoAnimate: bool\n  :arg EndDelay:  (Default: -1.000000)\n  :type EndDelay: double\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec UpdateAbilityBox(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: If the ability box is used, tell it to refresh based on the abilities of this unit\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  If the ability box is used, tell it to refresh based on the abilities of this unit\n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, Vector) MoveToIndex(exec then, int PathsMap, int IndexPathEnd)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg PathsMap: \n  :type PathsMap: int\n  :arg IndexPathEnd: \n  :type IndexPathEnd: int\n  :returns execute: \n  :rtype execute: exec\n  :returns PathLocations: \n  :rtype PathLocations: Vector</code></pre></div>\n<p>.. cpp:function:: (exec, Vector) MoveCustomPath(exec then, int InputPin)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg InputPin: \n  :type InputPin: int\n  :returns execute: \n  :rtype execute: exec\n  :returns PathLocations: \n  :rtype PathLocations: Vector</code></pre></div>\n<p>.. cpp:function:: (exec, bool) SimulateMoveStep(exec then, int ExitingGridIndex, int EnteringGridIndex, int PathIndexes)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg ExitingGridIndex: \n  :type ExitingGridIndex: int\n  :arg EnteringGridIndex: \n  :type EnteringGridIndex: int\n  :arg PathIndexes: \n  :type PathIndexes: int\n  :returns execute: \n  :rtype execute: exec\n  :returns bInterrupted:  (Default: false)\n  :rtype bInterrupted: bool</code></pre></div>\n<p>.. cpp:function:: (exec, exec) Simulate_Exit_Tile(exec then, int ExitingGridIndex, int EnteringGridIndex, int PathIndexes)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg ExitingGridIndex: \n  :type ExitingGridIndex: int\n  :arg EnteringGridIndex: \n  :type EnteringGridIndex: int\n  :arg PathIndexes: \n  :type PathIndexes: int\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, exec) SimulateEnterTile(exec then, int EnteringGridIndex, int ExitingGridIndex, int PathIndexes)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg EnteringGridIndex: \n  :type EnteringGridIndex: int\n  :arg ExitingGridIndex: \n  :type ExitingGridIndex: int\n  :arg PathIndexes: \n  :type PathIndexes: int\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec QueueAttackUnit(exec then, BP_Unit TargetUnit, double AttackDamage, double EndDelay=-1.000000)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: Action\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg TargetUnit: \n  :type TargetUnit: BP_Unit\n  :arg AttackDamage: \n  :type AttackDamage: double\n  :arg EndDelay:  (Default: -1.000000)\n  :type EndDelay: double\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec PlaceActorAtAnchor(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: void SetupGridLocationCapsule(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: (exec, bool) IsUnitAllied(exec then, BP_Unit ComparedUnit)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event, Blueprint Pure\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg ComparedUnit: \n  :type ComparedUnit: BP_Unit\n  :returns execute: \n  :rtype execute: exec\n  :returns bAllied:  (Default: false)\n  :rtype bAllied: bool</code></pre></div>\n<p>.. cpp:function:: void KillUnit(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void SetupAbilitySystemNextTick(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void SetGridIndex(exec then, int GridIndex=0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg GridIndex: Grid Index Integer (Default: 0)\n  :type GridIndex: int</code></pre></div>\n<p>.. cpp:function:: void BeginPlay(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Event when play begins for this actor.\n\n  Category: \n\n  Access Modifier: Protected\n\n  Constant: False\n\n  Flags: Event, Blueprint Event\n\n  Event when play begins for this actor.\n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void SpawnPuppet(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void QueueShowUnitSelect(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void SetupUnitAfterAssignedOwner(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void ExhaustActor(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void RunOnBeginActorTurn(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void RemoveActiveUnit(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void SetAiControlled(exec then, bool bAiControlled=false)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg bAiControlled: Ai Controlled Boolean (Default: false)\n  :type bAiControlled: bool</code></pre></div>\n<p>.. cpp:function:: void RunOnEndActorTurn(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void DeselectActor(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void RefreshActor(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void SelectActor(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void Destroyed(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Called when the actor has been explicitly destroyed.\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Event, Blueprint Event\n\n  Called when the actor has been explicitly destroyed.\n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void ReactivateActor(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:member:: PointerToUberGraphFrame UberGraphFrame</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: \n\n  Access Modifier: \n  Flags: Zero Constructor, Transit, Duplicate Transient\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: SceneComponent GridLocationScene</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: CapsuleComponent GridLocationCapsule</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: BP_GridAnchor BP_GridAnchor</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: SceneComponent Scene</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int MaxAP</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Attributes\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  The value Current Move is set to at the end of this pawn's turn</code></pre></div>\n<p>.. cpp:member:: int CurrentAP</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Attributes\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  The move a pawn begins play with, in number of tiles/turn</code></pre></div>\n<p>.. cpp:member:: int Move</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Attributes\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Move distance of unit for 1 AP</code></pre></div>\n<p>.. cpp:member:: int Range</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Attributes\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  How far can the pawn attack?</code></pre></div>\n<p>.. cpp:member:: int MinimumRange</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Attributes\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  The minimum distance in tiles the unit must be from a tile it wants to target.</code></pre></div>\n<p>.. cpp:member:: double MaxHealth</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Attributes\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  If Current Health = Max Health the health bar will appear full</code></pre></div>\n<p>.. cpp:member:: double CurrentHealth</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Attributes\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Current health of pawn. 0 = dead</code></pre></div>\n<p>.. cpp:member:: double Damage</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Attributes\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  How much damage does the pawn deal?</code></pre></div>\n<p>.. cpp:member:: double Initiative</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Attributes\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Higher is earlier. When will this unit act? If equal to another unit this will be determined by the order they were placed. The default units have initiative set to 0 for enemies and 1 for players, sorting them neatly into two separate acting teams.</code></pre></div>\n<p>.. cpp:member:: bool bAIControlled</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Attributes\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Should this unit be controlled by the AI (does not turn it into an enemy unless so specified by its faction and Allied Factions)</code></pre></div>\n<p>.. cpp:member:: int8 Faction</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Attributes\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  DO NOT CHOOSE EMPTY. Which faction is the unit. Checked by other unit's AlliedFactions to determine how they interact with this unit</code></pre></div>\n<p>.. cpp:member:: Set AlliedFactions</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Attributes\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible\n  Lifetime Condition: None\n\n  The unit will not attack units of these factions (the faction of this unit is automatically added in its construction script)</code></pre></div>\n<p>.. cpp:member:: bool bDiamondShapedVisibility</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, MovementOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Should visibility be calculated in a diamong shape (diagonal distance counting as twice as long as straight)</code></pre></div>\n<p>.. cpp:member:: double MaxSpeed</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Animation\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Max speed along spline</code></pre></div>\n<p>.. cpp:member:: double Acceleration</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Animation\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Acceleration along spline up to max speed</code></pre></div>\n<p>.. cpp:member:: int8 PreferredRange</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, MovementOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  This unit preference when it comes to deciding move location when using attributes that do not generate values for all possible tiles. Short move means the unit moves as few tiles as possible towards it target while it still can use its ability. Long and close range means it prefers to be as far away/close to its target as possible.</code></pre></div>\n<p>.. cpp:member:: int MaxSearchRange</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Attributes\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  How far will the AI pathfinding search for a target before giving up?</code></pre></div>\n<p>.. cpp:member:: int8 ConstuctionScriptFactionCompare</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: DO NOT EDIT\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Used by construction script to automatically add own faction to AlliedFactions</code></pre></div>\n<p>.. cpp:member:: bool bTraceForGround</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, MovementOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  If true, will trace to find the ground every tick while movement. Can prevent clipping on bumpy terrain.</code></pre></div>\n<p>.. cpp:member:: MulticastInlineDelegate OnActionHit</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Blueprint Assignable, Blueprint Callable\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Texture2D Icon</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Attributes\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Icon representing this unit. Used in initiative bar</code></pre></div>\n<p>.. cpp:member:: Name Name</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Attributes\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Name of this unit. Used in initiative bar</code></pre></div>\n<p>.. cpp:member:: bool bAutoInitiativeOnSpawn</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Attributes\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  If true, this unit will automatically be added at the end of initiative when spawned in the game. If false, must be added manually or it will never get its turn.</code></pre></div>\n<p>.. cpp:member:: Class DefaultAbility</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Attributes\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Class of ability that this unit uses if it does not have an ability system component.</code></pre></div>\n<p>.. cpp:member:: int DefaultOwningPlayer</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Attributes\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Should always be 0 for single player games. On login, players will get control of all units of one specific DefaultOwningPlayer value. If a unit is activated that does not have an owning player, the game will stop, as no one can give input to this unit, uless it is AI controlled.</code></pre></div>\n<p>.. cpp:member:: Array CurrentModifiedBigIndexes</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bInterruptMovement</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: BP_GridManager GridManagerRef</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Vector AnchorOffset</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int GridIndex</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  The grid index the unit is currently at</code></pre></div>\n<p>.. cpp:member:: Actor Puppet</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Class PuppetClass</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Animation\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Defines what actor to spawn to visually represent the unit</code></pre></div>\n<p>.. cpp:member:: Class PathfindingType</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, MovementOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Type of pathfinding this unit is set to use by default. Properties of this pathfinding is defined in the GridManager's RunPathfinding function.</code></pre></div>\n<p>.. cpp:member:: double AIActivationDelay</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bShowGridLocationCapsule</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Displays the current tile location of the unit according to the game logic</code></pre></div>\n<p>.. cpp:member:: Vector FarOffGridLocation</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>","frontmatter":{"title":"BP_Unit","date":"September 28, 2024","description":" The parent class for all Unit actors. Is intended to be invisible and work with data and gameplay logic. Visualizing the unit in game is handled bt a Puppet actor, which is spawned by the Unit at runtime. "}},"previous":{"fields":{"slug":"/BP_Tile/"},"frontmatter":{"title":"BP_Tile"}},"next":{"fields":{"slug":"/BP_SubGrid/"},"frontmatter":{"title":"BP_SubGrid"}}},"pageContext":{"id":"6eb35f41-f82b-5fec-9923-c9d6dba56634","previousPostId":"0fbf7206-48ac-5b6c-90dd-f50f4ff009a1","nextPostId":"d8b54a58-02fe-5b51-a0ec-43f10fa3c2b3"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}