{"componentChunkName":"component---src-templates-blog-post-js","path":"/BP_AbilityBase/","result":{"data":{"site":{"siteMetadata":{"title":"Advanced Turn Based Tile Toolkit"}},"markdownRemark":{"id":"c5012952-433d-59eb-8be4-cf9b96312619","excerpt":"BP_AbilityBase Path: /Game/AdvancedTurnBasedTileToolkit/Core/Abilities/BP_AbilityBase .. cpp:class:: BP_AbilityBase : public Actor Holds core functionalityâ€¦","html":"<h1>BP_AbilityBase</h1>\n<p>Path: /Game/AdvancedTurnBasedTileToolkit/Core/Abilities/BP_AbilityBase</p>\n<p>.. cpp:class:: BP_AbilityBase : public Actor</p>\n<p>Holds core functionality which will generally be shared by all abilities, including ones not owned by units. Handles taking and validating input from the Player Controller and setting up the GridUI for the ability.</p>\n<p>.. cpp:function:: void Construction_Script(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Construction script, the place to spawn components and do other setup. @note Name used in CreateBlueprint function\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Required API, Event, Blueprint Event\n\n  Construction script, the place to spawn components and do other setup. @note Name used in CreateBlueprint function\n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: (exec, bool) CheckMouseNotOverUi(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns bValid:  (Default: false)\n  :rtype bValid: bool</code></pre></div>\n<p>.. cpp:function:: (exec, bool, exec, bool) CheckForNoOngoingActions(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns bValid:  (Default: true)\n  :rtype bValid: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns bValid:  (Default: false)\n  :rtype bValid: bool</code></pre></div>\n<p>.. cpp:function:: (exec, bool, Vector, exec, bool, Vector, exec, bool, Vector) CheckHoveredLocation(exec then, bool bTouch)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg bTouch: \n  :type bTouch: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns bValid:  (Default: false)\n  :rtype bValid: bool\n  :returns Location:  (Default: 0, 0, 0)\n  :rtype Location: Vector\n  :returns execute: \n  :rtype execute: exec\n  :returns bValid:  (Default: false)\n  :rtype bValid: bool\n  :returns Location:  (Default: 0, 0, 0)\n  :rtype Location: Vector\n  :returns execute: \n  :rtype execute: exec\n  :returns bValid:  (Default: true)\n  :rtype bValid: bool\n  :returns Location:  (Default: 0, 0, 0)\n  :rtype Location: Vector</code></pre></div>\n<p>.. cpp:function:: (exec, bool, exec, bool) CheckTileHasChanged(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns bHasChanged:  (Default: true)\n  :rtype bHasChanged: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns bHasChanged:  (Default: false)\n  :rtype bHasChanged: bool</code></pre></div>\n<p>.. cpp:function:: (exec, bool) CheckIfPlayerOwnsAbility(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event, Blueprint Pure\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns bTrue:  (Default: false)\n  :rtype bTrue: bool</code></pre></div>\n<p>.. cpp:function:: void CallClientHoverFromServer(exec then, bool bValidTile, int GridIndex)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg bValidTile: \n  :type bValidTile: bool\n  :arg GridIndex: \n  :type GridIndex: int</code></pre></div>\n<p>.. cpp:function:: (exec, bool, Vector, exec, bool, Vector, exec, bool, Vector, exec, bool, Vector, exec, bool, Vector, exec, bool, Vector) CheckThatHoverIsAllowed(exec then, bool bUseCustomLocation, Vector CustomLocation)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg bUseCustomLocation: \n  :type bUseCustomLocation: bool\n  :arg CustomLocation: \n  :type CustomLocation: Vector\n  :returns execute: \n  :rtype execute: exec\n  :returns bAllowed:  (Default: true)\n  :rtype bAllowed: bool\n  :returns Location:  (Default: 0, 0, 0)\n  :rtype Location: Vector\n  :returns execute: \n  :rtype execute: exec\n  :returns bAllowed:  (Default: false)\n  :rtype bAllowed: bool\n  :returns Location:  (Default: 0, 0, 0)\n  :rtype Location: Vector\n  :returns execute: \n  :rtype execute: exec\n  :returns bAllowed:  (Default: false)\n  :rtype bAllowed: bool\n  :returns Location:  (Default: 0, 0, 0)\n  :rtype Location: Vector\n  :returns execute: \n  :rtype execute: exec\n  :returns bAllowed:  (Default: true)\n  :rtype bAllowed: bool\n  :returns Location:  (Default: 0, 0, 0)\n  :rtype Location: Vector\n  :returns execute: \n  :rtype execute: exec\n  :returns bAllowed:  (Default: false)\n  :rtype bAllowed: bool\n  :returns Location:  (Default: 0, 0, 0)\n  :rtype Location: Vector\n  :returns execute: \n  :rtype execute: exec\n  :returns bAllowed:  (Default: false)\n  :rtype bAllowed: bool\n  :returns Location:  (Default: 0, 0, 0)\n  :rtype Location: Vector</code></pre></div>\n<p>.. cpp:function:: (exec, bool, Vector, exec, bool, Vector, exec, bool, Vector, exec, bool, Vector) CheckForPuppetsUnderCursor(exec then, bool bTouch)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg bTouch: \n  :type bTouch: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns bFoundPuppet:  (Default: true)\n  :rtype bFoundPuppet: bool\n  :returns ReturnValue:  (Default: 0, 0, 0)\n  :rtype ReturnValue: Vector\n  :returns execute: \n  :rtype execute: exec\n  :returns bFoundPuppet:  (Default: false)\n  :rtype bFoundPuppet: bool\n  :returns ReturnValue:  (Default: 0, 0, 0)\n  :rtype ReturnValue: Vector\n  :returns execute: \n  :rtype execute: exec\n  :returns bFoundPuppet:  (Default: true)\n  :rtype bFoundPuppet: bool\n  :returns ReturnValue:  (Default: 0, 0, 0)\n  :rtype ReturnValue: Vector\n  :returns execute: \n  :rtype execute: exec\n  :returns bFoundPuppet:  (Default: false)\n  :rtype bFoundPuppet: bool\n  :returns ReturnValue:  (Default: 0, 0, 0)\n  :rtype ReturnValue: Vector</code></pre></div>\n<p>.. cpp:function:: void QueueDisplayMarkedTiles(exec then, int MarkedIndexes, ETileMarkerType MarkerType=NewEnumerator0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg MarkedIndexes: \n  :type MarkedIndexes: int\n  :arg MarkerType:  (Default: NewEnumerator0)\n  :type MarkerType: ETileMarkerType</code></pre></div>\n<p>.. cpp:function:: (exec, bool) CheckRequirements(exec then, Actor ActivatingActor)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Checks if all requirements are met before activating/evaluating this ability. Requirements should be specified in child blueprints, and could for instance be actors that are referenced by this ability, that we need to ensure exist to prevent errors\n\n  Category: Default\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  Checks if all requirements are met before activating/evaluating this ability. Requirements should be specified in child blueprints, and could for instance be actors that are referenced by this ability, that we need to ensure exist to prevent errors\n\n  :arg then: \n  :type then: exec\n  :arg ActivatingActor: \n  :type ActivatingActor: Actor\n  :returns execute: \n  :rtype execute: exec\n  :returns bMeetsRequirements:  (Default: true)\n  :rtype bMeetsRequirements: bool</code></pre></div>\n<p>.. cpp:function:: (exec, bool, exec, bool) AttemptActivate(exec then, bool bReassess, Actor OwningActor)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: Default\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg bReassess: \n  :type bReassess: bool\n  :arg OwningActor: \n  :type OwningActor: Actor\n  :returns execute: \n  :rtype execute: exec\n  :returns bSuccess:  (Default: true)\n  :rtype bSuccess: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns bSuccess:  (Default: false)\n  :rtype bSuccess: bool</code></pre></div>\n<p>.. cpp:function:: void MulticastSetupGridUIRef(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Net, Net Reliable, Net Multicast, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void ClientForceClickAttempt(exec then, Key Key=None, bool bReleased, EClickType ClickType=NewEnumerator0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Net, Net Client, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Key:  (Default: None)\n  :type Key: Key\n  :arg bReleased: \n  :type bReleased: bool\n  :arg ClickType:  (Default: NewEnumerator0)\n  :type ClickType: EClickType</code></pre></div>\n<p>.. cpp:function:: void ClientForceHoverAttempt(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Net, Net Client, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void ClientDeactivate(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Net, Net Client, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void Deactivate(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void Activate(exec then, bool bReassess, Actor OwningActor)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg bReassess: \n  :type bReassess: bool\n  :arg OwningActor: \n  :type OwningActor: Actor</code></pre></div>\n<p>.. cpp:function:: void ClickInvalid(exec then, Key Key=None, bool bReleased, EClickType ClickType=NewEnumerator0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Key:  (Default: None)\n  :type Key: Key\n  :arg bReleased: \n  :type bReleased: bool\n  :arg ClickType:  (Default: NewEnumerator0)\n  :type ClickType: EClickType</code></pre></div>\n<p>.. cpp:function:: void ServerConvertLocationToIndex(exec then, Vector Location, Key Key=None, bool bReleased, EClickType ClickType=NewEnumerator0, BP_PlayerController_ATBTT CallingPc, bool bTouch)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Net, Net Server, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Location: \n  :type Location: Vector\n  :arg Key:  (Default: None)\n  :type Key: Key\n  :arg bReleased: \n  :type bReleased: bool\n  :arg ClickType:  (Default: NewEnumerator0)\n  :type ClickType: EClickType\n  :arg CallingPc: \n  :type CallingPc: BP_PlayerController_ATBTT\n  :arg bTouch: \n  :type bTouch: bool</code></pre></div>\n<p>.. cpp:function:: void ClickAttempt(exec then, Key Key=None, bool bReleased, EClickType ClickType=NewEnumerator0, BP_PlayerController_ATBTT CallingPc, bool bTouch, bool bUseCustomLocation, Vector CustomLocation)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Key:  (Default: None)\n  :type Key: Key\n  :arg bReleased: \n  :type bReleased: bool\n  :arg ClickType:  (Default: NewEnumerator0)\n  :type ClickType: EClickType\n  :arg CallingPc: \n  :type CallingPc: BP_PlayerController_ATBTT\n  :arg bTouch: \n  :type bTouch: bool\n  :arg bUseCustomLocation: \n  :type bUseCustomLocation: bool\n  :arg CustomLocation: \n  :type CustomLocation: Vector</code></pre></div>\n<p>.. cpp:function:: void ServerInteract(exec then, bool bValidTile, int ClickedIndex, Vector Location, Key Key=None, bool bReleased, EClickType ClickType=NewEnumerator0, BP_PlayerController_ATBTT CallingPc)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Net, Net Server, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg bValidTile: \n  :type bValidTile: bool\n  :arg ClickedIndex: \n  :type ClickedIndex: int\n  :arg Location: \n  :type Location: Vector\n  :arg Key:  (Default: None)\n  :type Key: Key\n  :arg bReleased: \n  :type bReleased: bool\n  :arg ClickType:  (Default: NewEnumerator0)\n  :type ClickType: EClickType\n  :arg CallingPc: \n  :type CallingPc: BP_PlayerController_ATBTT</code></pre></div>\n<p>.. cpp:function:: void ClientResetInvalid(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Net, Net Client, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void ClientDisplayHover(exec then, Vector Location, bool bValid)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Net, Net Client, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Location: \n  :type Location: Vector\n  :arg bValid: \n  :type bValid: bool</code></pre></div>\n<p>.. cpp:function:: void ServerHover(exec then, bool bValidTile, int HoveredTile, Vector Location)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Net, Net Server, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg bValidTile: \n  :type bValidTile: bool\n  :arg HoveredTile: \n  :type HoveredTile: int\n  :arg Location: \n  :type Location: Vector</code></pre></div>\n<p>.. cpp:function:: void BeginPlay(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Event when play begins for this actor.\n\n  Category: \n\n  Access Modifier: Protected\n\n  Constant: False\n\n  Flags: Event, Blueprint Event\n\n  Event when play begins for this actor.\n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void ServerDecideWhatToShowOnHover(exec then, Vector HoverLocation)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Net, Net Server, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg HoverLocation: \n  :type HoverLocation: Vector</code></pre></div>\n<p>.. cpp:function:: void HoverAttempt(exec then, bool bUseCustomLocation, Vector CustomLocation)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg bUseCustomLocation: \n  :type bUseCustomLocation: bool\n  :arg CustomLocation: \n  :type CustomLocation: Vector</code></pre></div>\n<p>.. cpp:member:: PointerToUberGraphFrame UberGraphFrame</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: \n\n  Access Modifier: \n  Flags: Zero Constructor, Transit, Duplicate Transient\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: SceneComponent DefaultSceneRoot</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Vector HoveredLocation</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Vector BigUnitOffset</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int PreviousHoverIndex</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: BP_GridManager GridManagerRef</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int HoveredTile</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Vector ClickedLocation</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int TargetIndex</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Actor OwningActor</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int ClickedIndex</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bEnableHover</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bUseBigOffset</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bUseHoverMarker</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: BP_GridUI GridUIRef</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Class GridUIOverride</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Actor MarkedActor</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bCheckForPuppets</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Vector PreviousHoveredLocation</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>","frontmatter":{"title":"BP_AbilityBase","date":"September 28, 2024","description":" Holds core functionality which will generally be shared by all abilities, including ones not owned by units. Handles taking and validating input from the Player Controller and setting up the GridUI for the ability."}},"previous":{"fields":{"slug":"/BP_Ability_Move/"},"frontmatter":{"title":"BP_Ability_Move"}},"next":{"fields":{"slug":"/BP_ATBTT_Initiative/"},"frontmatter":{"title":"BP_ATBTT_Initiative"}}},"pageContext":{"id":"c5012952-433d-59eb-8be4-cf9b96312619","previousPostId":"c0438a3e-9063-539d-a7fa-51f3a84d376a","nextPostId":"2b058322-1121-566b-9598-f5328c90d9e0"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}