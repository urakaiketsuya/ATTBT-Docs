{"componentChunkName":"component---src-templates-blog-post-js","path":"/BP_TurnManager/","result":{"data":{"site":{"siteMetadata":{"title":"Advanced Turn Based Tile Toolkit"}},"markdownRemark":{"id":"48aa36cc-737d-50e3-8752-a9a6347a8727","excerpt":"BP_TurnManager Path: /Game/AdvancedTurnBasedTileToolkit/Core/BP_TurnManager .. cpp:class:: BP_TurnManager : public Actor Handles starting and ending unit turnsâ€¦","html":"<h1>BP_TurnManager</h1>\n<p>Path: /Game/AdvancedTurnBasedTileToolkit/Core/BP_TurnManager</p>\n<p>.. cpp:class:: BP_TurnManager : public Actor</p>\n<p>Handles starting and ending unit turns, holds the initiative order, current turn, current active unit and functions related to manipulating the turn order. This Turn Manager cycles through units by their faction.</p>\n<p>.. cpp:function:: void Construction_Script(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Construction script, the place to spawn components and do other setup. @note Name used in CreateBlueprint function\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Required API, Event, Blueprint Event\n\n  Construction script, the place to spawn components and do other setup. @note Name used in CreateBlueprint function\n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: (exec, int, exec, int) FindFirstIndexOfNextRound(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Loops through initiative array until it finds a unit with exhaused set to true, indicating that this unit has already acted, thus being the first unit in the next round\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  Loops through initiative array until it finds a unit with exhaused set to true, indicating that this unit has already acted, thus being the first unit in the next round\n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns Index:  (Default: 0)\n  :rtype Index: int\n  :returns execute: \n  :rtype execute: exec\n  :returns Index:  (Default: 0)\n  :rtype Index: int</code></pre></div>\n<p>.. cpp:function:: (exec, bool, int, exec, bool, int, exec, bool, int) FindIndexOfNextFaction(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Loops through initiative array to find the first unit with a different faction than the current one, returning its index\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  Loops through initiative array to find the first unit with a different faction than the current one, returning its index\n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns bSuccess:  (Default: true)\n  :rtype bSuccess: bool\n  :returns Index:  (Default: 0)\n  :rtype Index: int\n  :returns execute: \n  :rtype execute: exec\n  :returns bSuccess:  (Default: false)\n  :rtype bSuccess: bool\n  :returns Index:  (Default: -1)\n  :rtype Index: int\n  :returns execute: \n  :rtype execute: exec\n  :returns bSuccess:  (Default: false)\n  :rtype bSuccess: bool\n  :returns Index:  (Default: -1)\n  :rtype Index: int</code></pre></div>\n<p>.. cpp:function:: (exec, Actor) SortActorsInInitiativeOrder(exec then, Actor Actors)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Places unit references in the initiative array based on their initiative value, from highest to lowest\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Places unit references in the initiative array based on their initiative value, from highest to lowest\n\n  :arg then: \n  :type then: exec\n  :arg Actors: \n  :type Actors: Actor\n  :returns execute: \n  :rtype execute: exec\n  :returns SortedActors: \n  :rtype SortedActors: Actor</code></pre></div>\n<p>.. cpp:function:: (exec, Actor, exec, Actor, exec, Actor, exec, Actor, exec, Actor, exec, Actor) MoveActorInInitiative(exec then, EInitiativeSlot Selection=NewEnumerator0, Actor Actor)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Moves the active actor to a place in the initiative array based on the input\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Moves the active actor to a place in the initiative array based on the input\n\n  :arg then: \n  :type then: exec\n  :arg Selection:  (Default: NewEnumerator0)\n  :type Selection: EInitiativeSlot\n  :arg Actor: \n  :type Actor: Actor\n  :returns execute: \n  :rtype execute: exec\n  :returns InitiativeOrderActors: \n  :rtype InitiativeOrderActors: Actor\n  :returns execute: \n  :rtype execute: exec\n  :returns InitiativeOrderActors: \n  :rtype InitiativeOrderActors: Actor\n  :returns execute: \n  :rtype execute: exec\n  :returns InitiativeOrderActors: \n  :rtype InitiativeOrderActors: Actor\n  :returns execute: \n  :rtype execute: exec\n  :returns InitiativeOrderActors: \n  :rtype InitiativeOrderActors: Actor\n  :returns execute: \n  :rtype execute: exec\n  :returns InitiativeOrderActors: \n  :rtype InitiativeOrderActors: Actor\n  :returns execute: \n  :rtype execute: exec\n  :returns InitiativeOrderActors: \n  :rtype InitiativeOrderActors: Actor</code></pre></div>\n<p>.. cpp:function:: (exec, Actor, exec, Actor, exec, Actor) SetUnitLastInCurrentFaction(exec then, BP_Unit Unit)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Loops through initiative array until a unit with a different faction than the inputted one is found. Moves the inputted unit just before this unit in initiative. Used in games with separate turns for various factions, when you want to delay this unit until the rest of its faction have acted.\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  Loops through initiative array until a unit with a different faction than the inputted one is found. Moves the inputted unit just before this unit in initiative. Used in games with separate turns for various factions, when you want to delay this unit until the rest of its faction have acted.\n\n  :arg then: \n  :type then: exec\n  :arg Unit: \n  :type Unit: BP_Unit\n  :returns execute: \n  :rtype execute: exec\n  :returns InitiativeOrderActors: \n  :rtype InitiativeOrderActors: Actor\n  :returns execute: \n  :rtype execute: exec\n  :returns InitiativeOrderActors: \n  :rtype InitiativeOrderActors: Actor\n  :returns execute: \n  :rtype execute: exec\n  :returns InitiativeOrderActors: \n  :rtype InitiativeOrderActors: Actor</code></pre></div>\n<p>.. cpp:function:: (exec, bool, EFaction, exec, bool, EFaction, exec, bool, EFaction) CheckIfContainsSingleFaction(exec then, BP_Unit Units)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Returns true if the units in the input array all have the same faction. Used to check if all other units have been killed, signalling that the game should end.\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  Returns true if the units in the input array all have the same faction. Used to check if all other units have been killed, signalling that the game should end.\n\n  :arg then: \n  :type then: exec\n  :arg Units: \n  :type Units: BP_Unit\n  :returns execute: \n  :rtype execute: exec\n  :returns bContainsSingleFaction:  (Default: false)\n  :rtype bContainsSingleFaction: bool\n  :returns Faction:  (Default: NewEnumerator3)\n  :rtype Faction: EFaction\n  :returns execute: \n  :rtype execute: exec\n  :returns bContainsSingleFaction:  (Default: true)\n  :rtype bContainsSingleFaction: bool\n  :returns Faction:  (Default: NewEnumerator3)\n  :rtype Faction: EFaction\n  :returns execute: \n  :rtype execute: exec\n  :returns bContainsSingleFaction:  (Default: false)\n  :rtype bContainsSingleFaction: bool\n  :returns Faction:  (Default: NewEnumerator3)\n  :rtype Faction: EFaction</code></pre></div>\n<p>.. cpp:function:: exec UpdateInitiativeBar(exec then, Actor ActorsInInitiative, Actor ActiveActor)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Updates initiative bar based on inputted array of units\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  Updates initiative bar based on inputted array of units\n\n  :arg then: \n  :type then: exec\n  :arg ActorsInInitiative: \n  :type ActorsInInitiative: Actor\n  :arg ActiveActor: \n  :type ActiveActor: Actor\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, exec) DisplayGameOver(exec then, BP_Unit RemainingUnit)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Displays game over message, depending on the faction of what unit remains. Then prevents any further actions from occuring by not calling EndAction\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  Displays game over message, depending on the faction of what unit remains. Then prevents any further actions from occuring by not calling EndAction\n\n  :arg then: \n  :type then: exec\n  :arg RemainingUnit: \n  :type RemainingUnit: BP_Unit\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec OnRep_ActiveActor(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, Actor, exec, Actor) MoveActorToInititativeIndex(exec then, Actor Actor, Actor InitiativeArray, int Index)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Takes the first unit in the initiative array and moves it to the end. Usen when the active unit has ended its turn\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  Takes the first unit in the initiative array and moves it to the end. Usen when the active unit has ended its turn\n\n  :arg then: \n  :type then: exec\n  :arg Actor: \n  :type Actor: Actor\n  :arg InitiativeArray: \n  :type InitiativeArray: Actor\n  :arg Index: \n  :type Index: int\n  :returns execute: \n  :rtype execute: exec\n  :returns Out: \n  :rtype Out: Actor\n  :returns execute: \n  :rtype execute: exec\n  :returns Out: \n  :rtype Out: Actor</code></pre></div>\n<p>.. cpp:function:: (exec, bool, exec, bool, exec, bool) CheckIfActorWillActThisTurn(exec then, Actor Actor)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Actor: \n  :type Actor: Actor\n  :returns execute: \n  :rtype execute: exec\n  :returns bWillAct:  (Default: true)\n  :rtype bWillAct: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns bWillAct:  (Default: false)\n  :rtype bWillAct: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns bWillAct:  (Default: false)\n  :rtype bWillAct: bool</code></pre></div>\n<p>.. cpp:function:: (exec, bool) CheckIfUnitActivationAllowed(exec then, BP_Unit Unit)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Unit: \n  :type Unit: BP_Unit\n  :returns execute: \n  :rtype execute: exec\n  :returns bAllowed:  (Default: false)\n  :rtype bAllowed: bool</code></pre></div>\n<p>.. cpp:function:: (exec, bool, Actor, exec, bool, Actor) FindNextRefreshedActor(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns bFoundValidActor:  (Default: true)\n  :rtype bFoundValidActor: bool\n  :returns Actor: \n  :rtype Actor: Actor\n  :returns execute: \n  :rtype execute: exec\n  :returns bFoundValidActor:  (Default: false)\n  :rtype bFoundValidActor: bool\n  :returns Actor: \n  :rtype Actor: Actor</code></pre></div>\n<p>.. cpp:function:: (exec, bool, exec, bool) SwapToNextActorOfFaction(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns bSuccess:  (Default: true)\n  :rtype bSuccess: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns bSuccess:  (Default: false)\n  :rtype bSuccess: bool</code></pre></div>\n<p>.. cpp:function:: (exec, Actor) FindInitiativeActorsOfFaction(exec then, EFaction Faction=NewEnumerator3)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Faction:  (Default: NewEnumerator3)\n  :type Faction: EFaction\n  :returns execute: \n  :rtype execute: exec\n  :returns ActorsOfFaction: \n  :rtype ActorsOfFaction: Actor</code></pre></div>\n<p>.. cpp:function:: exec AssignUnitsToPlayers(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: void SetFactionOrder(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: (exec, bool, exec, bool, exec, bool) EndGameIfConditionMet(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns bGameOver:  (Default: false)\n  :rtype bGameOver: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns bGameOver:  (Default: false)\n  :rtype bGameOver: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns bGameOver:  (Default: false)\n  :rtype bGameOver: bool</code></pre></div>\n<p>.. cpp:function:: exec QueueStoreTurnInfo(exec then, int CurrentTurn, Actor ActiveActor)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg CurrentTurn: \n  :type CurrentTurn: int\n  :arg ActiveActor: \n  :type ActiveActor: Actor\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec QueueDisplayFactionTurn(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, exec) AddSpawnedActorToInitiative(exec then, Actor Actor)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Actor: \n  :type Actor: Actor\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec QueueSignalActorDone(exec then, double EndDelay=-1.000000)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: Action\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg EndDelay:  (Default: -1.000000)\n  :type EndDelay: double\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: void ReplacePreviewPuppetsWithFinal(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Calls on units to replace component based puppets (used for preview in editor) with separate puppet actors. Delayed until after all players have joined in networked games to prevent some puppets not spawning on clients due to race conditions\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  Calls on units to replace component based puppets (used for preview in editor) with separate puppet actors. Delayed until after all players have joined in networked games to prevent some puppets not spawning on clients due to race conditions\n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void BeginPlay(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Event when play begins for this actor.\n\n  Category: \n\n  Access Modifier: Protected\n\n  Constant: False\n\n  Flags: Event, Blueprint Event\n\n  Event when play begins for this actor.\n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void ResumeAfterOngoingActionsDone(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void EndTurnFromPlayerInput(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void EndActiveFactionTurn(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void BeginActiveFactionTurn(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void BeginNextValidActorTurn(exec then, bool bUseCustomDelay, double CustomDelay=-1.000000)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg bUseCustomDelay: \n  :type bUseCustomDelay: bool\n  :arg CustomDelay:  (Default: -1.000000)\n  :type CustomDelay: double</code></pre></div>\n<p>.. cpp:function:: void BeginNewRound(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void RunOnActorDeselected(exec then, Actor DeselectedActor)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg DeselectedActor: \n  :type DeselectedActor: Actor</code></pre></div>\n<p>.. cpp:function:: void RunOnActorSelected(exec then, Actor SelectedActor, bool bMakeActiveActor)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg SelectedActor: \n  :type SelectedActor: Actor\n  :arg bMakeActiveActor: \n  :type bMakeActiveActor: bool</code></pre></div>\n<p>.. cpp:function:: void RunAfterAbilityExecute(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void ResumeAfterActiveActorDeath(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void MulticastShowWaitingForPlayers(exec then, int CurrentReadyPlayers, int MaxPlayers)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Net, Net Reliable, Net Multicast, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg CurrentReadyPlayers: \n  :type CurrentReadyPlayers: int\n  :arg MaxPlayers: \n  :type MaxPlayers: int</code></pre></div>\n<p>.. cpp:function:: void StartMatch(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void NotifyPlayerReady(exec then, PlayerController Player)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Player: \n  :type Player: PlayerController</code></pre></div>\n<p>.. cpp:function:: void Initialize(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:member:: PointerToUberGraphFrame UberGraphFrame</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: \n\n  Access Modifier: \n  Flags: Zero Constructor, Transit, Duplicate Transient\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: SceneComponent DefaultSceneRoot</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array InitiativeOrderActors</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Net, Disable Edit On Template, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: BP_PlayerController_ATBTT ActivePlayer</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Net, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Actor ActiveActor</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Net, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, Rep Notify, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: BP_Unit ActiveUnit</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Net, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Actor ActiveActorAnimate</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array FactionOrder</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int8 ActiveFaction</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int CurrentTurn</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Net, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double EndTurnDelay</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bGameOver</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int ReadyPlayerCount</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int CurrentTurnAnimate</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bShouldWaitForActions</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array DefaultFactionOrder</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: MulticastInlineDelegate OnStartMatch</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Blueprint Assignable, Blueprint Callable\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Class IdleAbilityClass</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double EndTurnFromPlayerInputDelay</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double NetworkStartDelay</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>","frontmatter":{"title":"BP_TurnManager","date":"September 28, 2024","description":" Handles starting and ending unit turns, holds the initiative order, current turn, current active unit and functions related to manipulating the turn order. This Turn Manager cycles through units by their faction."}},"previous":{"fields":{"slug":"/BP_Tile/"},"frontmatter":{"title":"BP_Tile"}},"next":{"fields":{"slug":"/BP_TurnManager_Strategy/"},"frontmatter":{"title":"BP_TurnManager_Strategy"}}},"pageContext":{"id":"48aa36cc-737d-50e3-8752-a9a6347a8727","previousPostId":"0fbf7206-48ac-5b6c-90dd-f50f4ff009a1","nextPostId":"fa382892-5a43-5414-bff1-18a4bd7fc91b"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}