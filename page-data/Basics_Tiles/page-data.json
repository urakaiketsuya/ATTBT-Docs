{"componentChunkName":"component---src-templates-blog-post-js","path":"/Basics_Tiles/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"d2fcd3d4-a8c8-57b0-bf13-6220ca8dca48","excerpt":"hello in this video I'm gonna be talking\nabout various ways of setting up your\ngrid and customizing the grid\nso let's first get a grid manager down\nso we'reâ€¦","html":"<p>hello in this video I'm gonna be talking\nabout various ways of setting up your\ngrid and customizing the grid\nso let's first get a grid manager down\nso we're here in core grid VP grid\nmanager I'm gonna place this at 0 and\nI'm gonna increase size 12 or something\nlike that why not and and let's place a\nunit so that we can walk around on the\ngrid I'm gonna use BB unit Adam and here\nwe are okay so let's start by talking\nabout tiles so tiles as I said in the\nlast video you can find them in the\ntiles folder and in square you have some\ntiles set up to work with a square grid\nalso as shown before placing a tile on\nthe map will block pathfinding like so\nbut how does this how is this set up\nexactly let me demonstrate with a few\ndifferent kinds of tiles so we have this\ntile here which is called tile wall\nblock and we have this which is just\ncalled wall and we have another one here\nwhich is called tile wall II for east\nand so if your different ones and you\ncan see that they behave differently\nthat were able to walk behind this thin\nwall here but that we have to move\naround it and for this one we see that\nwe can move around it and for this one\nhere it's similar it just that we can\nalso cut through corners of this tile so\nhow does this work well each tile hair\non this grid are connected to its\nneighboring tiles through what are\ncalled edges I won't go into that in\ndetail in this video I'll dive in depth\nin that in another video\nbut what these tiles essentially do is\nthat they look at these edges that each\nof these tiles have and it removes some\nedges based on the values that are\ndefined within the edge cost variable of\neach tile which you can see is a bit\ndifferent for each of these three tiles\nyou can see the\nthese edge costs they are named after\nthe cardinal directions north east south\nwest north east and cetera so these are\nreferring to the axis on the grid\nmanager so if you click the grid manager\nthen in the x-axis that will be East and\nthe y-axis will be south so if you look\nat the grid manager from this rotation\nthen these naming conventions make sense\nso for this tile here we can see that it\nhas an edge cost of zero in every\ndirection what this means is at the star\nof the game this tile looks at the tile\nthat it's placed on which is the tile\nhere and below it and then it looks at\neach direction and it changes the edge\ncost that was there before with an edge\ncost of zero removing that edge from the\ngrid actually that's not entirely\nprecise it doesn't create an edge of\nzero it just removes that edge but what\nthis means is that when pathfinding\ntries to enter this tile it finds that\nthe edge costs here the edge does not\nexist so it cannot enter and the same if\nthe unit starts within this tile and we\nstart playing you can see that we can't\nmove anywhere because all of the\ndirections are blocked for the path\nfinding of this unit we can also add\ntiles that have costs that are greater\nthan one so if we add this to tile cost\ntile here it is set up like that by\ndefault so we can see here that it has a\ncost of two to enter this tile so if we\nhit play we see that the unit will want\nto avoid going into this tile but we can\nstill move through it the amount of\nmovement the unit has is defined within\nthe unit by the way we then move here\nbut I'll get more into how to customize\nunits in the later tutorial so back to\nthis tile so it has a cost of two if we\njust put all this back to one we can see\nthat it treats it as\nregular tile we can make it greater or\nback to the same job it acts as a higher\ncost again there's one more setting\nremaining to discuss and that is if we\nchoose one of these actors you can see\nhere that they have edge costs of minus\none what does that mean exactly well\nthis is what is causing this tile here\nto block these corners so that you can't\nmove around it or that you have to take\na long route and can't cut through\ncorners as you can with this tile here\nand so minus one is basically a special\ncommand that tells the toolkit at setup\nto look at the tile edges crossing the\nsides of this tile which are outside\nwhere the tile is actually placed at and\nthen blocking off or changing the\nmovement cost of those tiles if you want\nto create your own tile that's a pretty\nsimple process and I can click here and\nthen create a new blueprint after\nright-clicking I search for tile and\nhere it is\nBBD a tile I will call this vpg a tile\ncustom and by default it is immiscible\nwe have no mesh but it can still affect\npathfinding in the same way as any other\ntile as you will see so if I set this\nhair and I have increase the cost for\nall of these edges we can see that he\navoids this it's like with this other\ntile here having invisible walls can be\nuseful of course but we probably want to\nvisualize this in some way so we go into\nthis tile actor here and we can add a\nstatic mesh and we can choose from one\nof the static meshes that are included\nin the toolkit let's find one table like\nthis crate hair which is works well for\na and for a tile and now you will see\nthat there will be one issue here that\nit does not snap to the grid currently\nbut it will still lock the tile which it\nis placed on or change the edge cost of\nthat so let's change the edge costs here\nto zero and we will see that it locks\nthis and we can move around it and\nbehind it but it is not centered on the\ntile so the way to make it Center on the\ntile and snap to the grid is to go into\nthis and then attach it to the grid\nanchor which is a scene component that\nis used for the grid snapping\nfunctionality the grid snapping\nfunctionality is defined in the parent\nactor here so now we can see that it\nautomatically snaps to the grid we can\nalso make the location of this actor and\nthe location of this mesh to be aligned\nby clicking this place accurate anchor\nbutton hearing we click away and click\nback we can see that they are centered\nwe probably don't want to define the\nedges of a tile every time we place it\nof course you can change this in the\ndefaults here of these tiles let's go to\nedge cost here and I'm gonna put all of\nthem to zero maybe I want to block the\ncorners here so I'll put all of these\ntwo minus one there and now we can place\nmore of these and they will work just\nlike that so that's it for tiles so\ntiles are nice and all and they were the\nfirst method of manipulating and grid\nedges that I added to this toolkit over\nfive years ago but I've since added\nother methods also that are very useful\nit is possible to have the grid manager\ncalculate edges based on the collision\nproperties of meshes placed in the grid\narea and that is what I'm going to show\nin the next video but that's it for this\nvideo on tiles</p>","frontmatter":{"title":"ATTBT Basics #2 Tiles","date":"September 28, 2024","description":"https://www.youtube.com/watch?v=FVZLc6gG7No"}},"previous":{"fields":{"slug":"/Basics_Walls/"},"frontmatter":{"title":"ATTBT Basics #3 Walls"}},"next":{"fields":{"slug":"/Basics_Setup/"},"frontmatter":{"title":"ATTBT Basics #1 Setup"}}},"pageContext":{"id":"d2fcd3d4-a8c8-57b0-bf13-6220ca8dca48","previousPostId":"03a110ba-1e13-5130-a1a3-0e515e4aae72","nextPostId":"ffa867e2-2869-5d64-99ce-28e854cc1752"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}