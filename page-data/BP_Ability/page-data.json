{"componentChunkName":"component---src-templates-blog-post-js","path":"/BP_Ability/","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog"}},"markdownRemark":{"id":"0d6c2909-8ec0-5cfd-9db1-9fdba34972b3","excerpt":"BP_Ability Path: /Game/AdvancedTurnBasedTileToolkit/Core/Abilities/BP_Ability .. cpp:class:: BP_Ability : public BP_AbilityBase_C Parent of all abilityâ€¦","html":"<h1>BP_Ability</h1>\n<p>Path: /Game/AdvancedTurnBasedTileToolkit/Core/Abilities/BP_Ability</p>\n<p>.. cpp:class:: BP_Ability : public BP_AbilityBase_C</p>\n<p>Parent of all ability blueprints. Handles both displaying and executing the ability for players as well as calculating the value of its use for AI units.</p>\n<p>.. cpp:function:: void Construction_Script(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Construction script, the place to spawn components and do other setup. @note Name used in CreateBlueprint function\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Required API, Event, Blueprint Event\n\n  Construction script, the place to spawn components and do other setup. @note Name used in CreateBlueprint function\n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: (exec, bool, int, double, exec, bool, int, double, exec, bool, int, double) FindAndSelectBestTarget(exec then, int StartIndex, int Move, int Range, bool DiamondShapedVisibility, EFaction TargetFactions=NewEnumerator3, bool bFindFactionsNotInArray, bool ExcludeCurrentUnit, int PathsMap)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Finds all targets that can potentially be targeted by this ability, evaluates them, and returns the estimated best one\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Finds all targets that can potentially be targeted by this ability, evaluates them, and returns the estimated best one\n\n  :arg then: \n  :type then: exec\n  :arg StartIndex: \n  :type StartIndex: int\n  :arg Move: \n  :type Move: int\n  :arg Range: \n  :type Range: int\n  :arg DiamondShapedVisibility: \n  :type DiamondShapedVisibility: bool\n  :arg TargetFactions:  (Default: NewEnumerator3)\n  :type TargetFactions: EFaction\n  :arg bFindFactionsNotInArray: \n  :type bFindFactionsNotInArray: bool\n  :arg ExcludeCurrentUnit: \n  :type ExcludeCurrentUnit: bool\n  :arg PathsMap: \n  :type PathsMap: int\n  :returns execute: \n  :rtype execute: exec\n  :returns bTargetFound:  (Default: true)\n  :rtype bTargetFound: bool\n  :returns TargetIndex:  (Default: 0)\n  :rtype TargetIndex: int\n  :returns TargetValue:  (Default: 0.0)\n  :rtype TargetValue: double\n  :returns execute: \n  :rtype execute: exec\n  :returns bTargetFound:  (Default: false)\n  :rtype bTargetFound: bool\n  :returns TargetIndex:  (Default: -1)\n  :rtype TargetIndex: int\n  :returns TargetValue:  (Default: -1)\n  :rtype TargetValue: double\n  :returns execute: \n  :rtype execute: exec\n  :returns bTargetFound:  (Default: false)\n  :rtype bTargetFound: bool\n  :returns TargetIndex:  (Default: -1)\n  :rtype TargetIndex: int\n  :returns TargetValue:  (Default: -1)\n  :rtype TargetValue: double</code></pre></div>\n<p>.. cpp:function:: (exec, int, double) ChooseBestTarget(exec then, int PotentialTargets)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Loops through all input targets and returns the estimated best one\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Loops through all input targets and returns the estimated best one\n\n  :arg then: \n  :type then: exec\n  :arg PotentialTargets: \n  :type PotentialTargets: int\n  :returns execute: \n  :rtype execute: exec\n  :returns TargetIndex:  (Default: 0)\n  :rtype TargetIndex: int\n  :returns TargetValue:  (Default: 0.0)\n  :rtype TargetValue: double</code></pre></div>\n<p>.. cpp:function:: (exec, double) FindTargetValue(exec then, int TargetIndex)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Checks a target index and estimates the value of using this ability on said target. Returns .5 by default, but will generally be modified in child blueprints\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  Checks a target index and estimates the value of using this ability on said target. Returns .5 by default, but will generally be modified in child blueprints\n\n  :arg then: \n  :type then: exec\n  :arg TargetIndex: \n  :type TargetIndex: int\n  :returns execute: \n  :rtype execute: exec\n  :returns Value:  (Default: 0.500000)\n  :rtype Value: double</code></pre></div>\n<p>.. cpp:function:: (exec, exec, exec) PayAPCost(exec then, bool bUseCustomCost, int CustomCost)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Subtracts the default or the specified AP cost from the current AP of the active unit. If bUseEndsTurn is true, always sets AP to 0, which normally will end the unit's turn\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  Subtracts the default or the specified AP cost from the current AP of the active unit. If bUseEndsTurn is true, always sets AP to 0, which normally will end the unit's turn\n\n  :arg then: \n  :type then: exec\n  :arg bUseCustomCost: \n  :type bUseCustomCost: bool\n  :arg CustomCost: \n  :type CustomCost: int\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, bool, int, exec, bool, int, exec, bool, int, exec, bool, int, exec, bool, int) FindPotentialTargets(exec then, int Index, int Move, int Range, bool bDiamondShapedVisibility, EFaction RelevantFactions=NewEnumerator3, bool bFindFactionsNotInArray, bool bExcludeSpecifiedUnit, int FindSpecifiedTarget=-1, BP_Unit SpecifiedUnit)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Finds all target units that can potentially be reached with this ability given no obstacles, by looking at move range + sight range\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Finds all target units that can potentially be reached with this ability given no obstacles, by looking at move range + sight range\n\n  :arg then: \n  :type then: exec\n  :arg Index: \n  :type Index: int\n  :arg Move: \n  :type Move: int\n  :arg Range: \n  :type Range: int\n  :arg bDiamondShapedVisibility: \n  :type bDiamondShapedVisibility: bool\n  :arg RelevantFactions:  (Default: NewEnumerator3)\n  :type RelevantFactions: EFaction\n  :arg bFindFactionsNotInArray: \n  :type bFindFactionsNotInArray: bool\n  :arg bExcludeSpecifiedUnit: \n  :type bExcludeSpecifiedUnit: bool\n  :arg FindSpecifiedTarget:  (Default: -1)\n  :type FindSpecifiedTarget: int\n  :arg SpecifiedUnit: \n  :type SpecifiedUnit: BP_Unit\n  :returns execute: \n  :rtype execute: exec\n  :returns bFoundValidTargets:  (Default: true)\n  :rtype bFoundValidTargets: bool\n  :returns PotentialTargtets: \n  :rtype PotentialTargtets: int\n  :returns execute: \n  :rtype execute: exec\n  :returns bFoundValidTargets:  (Default: false)\n  :rtype bFoundValidTargets: bool\n  :returns PotentialTargtets: \n  :rtype PotentialTargtets: int\n  :returns execute: \n  :rtype execute: exec\n  :returns bFoundValidTargets:  (Default: false)\n  :rtype bFoundValidTargets: bool\n  :returns PotentialTargtets: \n  :rtype PotentialTargtets: int\n  :returns execute: \n  :rtype execute: exec\n  :returns bFoundValidTargets:  (Default: true)\n  :rtype bFoundValidTargets: bool\n  :returns PotentialTargtets: \n  :rtype PotentialTargtets: int\n  :returns execute: \n  :rtype execute: exec\n  :returns bFoundValidTargets:  (Default: false)\n  :rtype bFoundValidTargets: bool\n  :returns PotentialTargtets: \n  :rtype PotentialTargtets: int</code></pre></div>\n<p>.. cpp:function:: (exec, int, double) EvaluateTargets(exec then, int PotentialTargets)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Loops through all input targets and returns the estimated values of each\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Loops through all input targets and returns the estimated values of each\n\n  :arg then: \n  :type then: exec\n  :arg PotentialTargets: \n  :type PotentialTargets: int\n  :returns execute: \n  :rtype execute: exec\n  :returns TargetIndexes: \n  :rtype TargetIndexes: int\n  :returns TargetValues: \n  :rtype TargetValues: double</code></pre></div>\n<p>.. cpp:function:: (exec, text, text) GetDescription(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Returns the description defined by this function. Should be overridden for child blueprints of this actor\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  Returns the description defined by this function. Should be overridden for child blueprints of this actor\n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns Name:  (Default: NSLOCTEXT(\"[8CD836ED4FA35BB80F130280653D5977]\", \"A99CCC664E0B3AA60E4C5E9DBC2DF37E\", \"No Name\"))\n  :rtype Name: text\n  :returns Description:  (Default: NSLOCTEXT(\"[8CD836ED4FA35BB80F130280653D5977]\", \"1CE2B25043E6D8EECE1DD7BB53A4F184\", \"A working description\\r\\nwith multiple lines\"))\n  :rtype Description: text</code></pre></div>\n<p>.. cpp:function:: (exec, text, text) GetHoverText(exec then, int HoveredTile)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Returns text that will be displayed while hovering over tiles with this ability active. Returns the same as GetDescription unless overridden in child blueprints\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Returns text that will be displayed while hovering over tiles with this ability active. Returns the same as GetDescription unless overridden in child blueprints\n\n  :arg then: \n  :type then: exec\n  :arg HoveredTile: \n  :type HoveredTile: int\n  :returns execute: \n  :rtype execute: exec\n  :returns Name: \n  :rtype Name: text\n  :returns HoverText: \n  :rtype HoverText: text</code></pre></div>\n<p>.. cpp:function:: exec AssignAbilityToUnit(exec then, BP_Unit OwningUnit)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Sets this ability to be the current active ability of the owning unit. Deactivates any previous active ability.\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  Sets this ability to be the current active ability of the owning unit. Deactivates any previous active ability.\n\n  :arg then: \n  :type then: exec\n  :arg OwningUnit: \n  :type OwningUnit: BP_Unit\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, exec) WakeNearbyUnits(exec then, int Index, int NoiseRange, int SpotRange)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Any units with a stealth component that are not in initiative within the specified ranges are alerted and added to initiative. Always within move range, but for view range only if the specified grid index is in the front of the unit and not blocked\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  Any units with a stealth component that are not in initiative within the specified ranges are alerted and added to initiative. Always within move range, but for view range only if the specified grid index is in the front of the unit and not blocked\n\n  :arg then: \n  :type then: exec\n  :arg Index: \n  :type Index: int\n  :arg NoiseRange: \n  :type NoiseRange: int\n  :arg SpotRange: \n  :type SpotRange: int\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, BP_StatusEffect, exec, BP_StatusEffect) AddStatusEffect(exec then, BP_StatusEffect StatusEffect, BP_Unit Target)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Spawns a status effect actor, ties it to the target and activates it\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Spawns a status effect actor, ties it to the target and activates it\n\n  :arg then: \n  :type then: exec\n  :arg StatusEffect: \n  :type StatusEffect: BP_StatusEffect\n  :arg Target: \n  :type Target: BP_Unit\n  :returns execute: \n  :rtype execute: exec\n  :returns EffectRef: \n  :rtype EffectRef: BP_StatusEffect\n  :returns execute: \n  :rtype execute: exec\n  :returns EffectRef: \n  :rtype EffectRef: BP_StatusEffect</code></pre></div>\n<p>.. cpp:function:: exec DisplayAbilityWarning(exec then, BP_Unit Unit, BP_Ability Ability, string Requirement)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Displays a debug warning due to a requirement for this skill not being met\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  Displays a debug warning due to a requirement for this skill not being met\n\n  :arg then: \n  :type then: exec\n  :arg Unit: \n  :type Unit: BP_Unit\n  :arg Ability: \n  :type Ability: BP_Ability\n  :arg Requirement: \n  :type Requirement: string\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, bool, int, int, exec, bool, int, int, exec, bool, int, int, exec, bool, int, int, exec, bool, int, int) FindAllPossibleTargets(exec then, int SourceIndex, int PossibleMove, int Range, bool bDiamondShapedVisibility, EFaction RelevantFactions=NewEnumerator3, bool bFindFactionsNotInArray, bool bExcludeSpecifiedUnit, int FindSpecifiedTarget=-1, BP_Unit SpecifiedUnit)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Returns all target that can be targeted by this ability, given its range and the movement of the owning unit, accounting for obstacles to movement and sight\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Returns all target that can be targeted by this ability, given its range and the movement of the owning unit, accounting for obstacles to movement and sight\n\n  :arg then: \n  :type then: exec\n  :arg SourceIndex: \n  :type SourceIndex: int\n  :arg PossibleMove: \n  :type PossibleMove: int\n  :arg Range: \n  :type Range: int\n  :arg bDiamondShapedVisibility: \n  :type bDiamondShapedVisibility: bool\n  :arg RelevantFactions:  (Default: NewEnumerator3)\n  :type RelevantFactions: EFaction\n  :arg bFindFactionsNotInArray: \n  :type bFindFactionsNotInArray: bool\n  :arg bExcludeSpecifiedUnit: \n  :type bExcludeSpecifiedUnit: bool\n  :arg FindSpecifiedTarget:  (Default: -1)\n  :type FindSpecifiedTarget: int\n  :arg SpecifiedUnit: \n  :type SpecifiedUnit: BP_Unit\n  :returns execute: \n  :rtype execute: exec\n  :returns bFoundValidTargets:  (Default: true)\n  :rtype bFoundValidTargets: bool\n  :returns TargetIndexes: \n  :rtype TargetIndexes: int\n  :returns PathsMap: \n  :rtype PathsMap: int\n  :returns execute: \n  :rtype execute: exec\n  :returns bFoundValidTargets:  (Default: false)\n  :rtype bFoundValidTargets: bool\n  :returns TargetIndexes: \n  :rtype TargetIndexes: int\n  :returns PathsMap: \n  :rtype PathsMap: int\n  :returns execute: \n  :rtype execute: exec\n  :returns bFoundValidTargets:  (Default: true)\n  :rtype bFoundValidTargets: bool\n  :returns TargetIndexes: \n  :rtype TargetIndexes: int\n  :returns PathsMap: \n  :rtype PathsMap: int\n  :returns execute: \n  :rtype execute: exec\n  :returns bFoundValidTargets:  (Default: true)\n  :rtype bFoundValidTargets: bool\n  :returns TargetIndexes: \n  :rtype TargetIndexes: int\n  :returns PathsMap: \n  :rtype PathsMap: int\n  :returns execute: \n  :rtype execute: exec\n  :returns bFoundValidTargets:  (Default: true)\n  :rtype bFoundValidTargets: bool\n  :returns TargetIndexes: \n  :rtype TargetIndexes: int\n  :returns PathsMap: \n  :rtype PathsMap: int</code></pre></div>\n<p>.. cpp:function:: (exec, int) EvaluateMoveTargets(exec then, int PathsMap)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Returns the estimated value of all input tiles. By default returns 1 for all, and should be modified in child blueprints, where one can for instance check the cover value of each tile and have this inform the value.\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Returns the estimated value of all input tiles. By default returns 1 for all, and should be modified in child blueprints, where one can for instance check the cover value of each tile and have this inform the value.\n\n  :arg then: \n  :type then: exec\n  :arg PathsMap: \n  :type PathsMap: int\n  :returns execute: \n  :rtype execute: exec\n  :returns TileValues: \n  :rtype TileValues: int</code></pre></div>\n<p>.. cpp:function:: (exec, int, double) FindCombinedTileAndTargetValue_SingleUnit(exec then, int GridIndex, int ArrayIndex, int PathsMap, int TileValues, double TargetValues)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Finds the best tile to use the ability from on a specific target, and returns the combined value of the tile and the target\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Finds the best tile to use the ability from on a specific target, and returns the combined value of the tile and the target\n\n  :arg then: \n  :type then: exec\n  :arg GridIndex: \n  :type GridIndex: int\n  :arg ArrayIndex: \n  :type ArrayIndex: int\n  :arg PathsMap: \n  :type PathsMap: int\n  :arg TileValues: \n  :type TileValues: int\n  :arg TargetValues: \n  :type TargetValues: double\n  :returns execute: \n  :rtype execute: exec\n  :returns BestTileIndex:  (Default: 0)\n  :rtype BestTileIndex: int\n  :returns BestTileValue:  (Default: 0.0)\n  :rtype BestTileValue: double</code></pre></div>\n<p>.. cpp:function:: (exec, double) FindAbilitySpecificTileValueModifier(exec then, int GridIndex, int TargetIndex)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: As part of FindCombinedTileAndTargetValue_SingleUnit, this function can be used to modify the estimated value of a tile, in cases where this should be influenced by the ability in question\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  As part of FindCombinedTileAndTargetValue_SingleUnit, this function can be used to modify the estimated value of a tile, in cases where this should be influenced by the ability in question\n\n  :arg then: \n  :type then: exec\n  :arg GridIndex: \n  :type GridIndex: int\n  :arg TargetIndex: \n  :type TargetIndex: int\n  :returns execute: \n  :rtype execute: exec\n  :returns ValueModifier:  (Default: 1)\n  :rtype ValueModifier: double</code></pre></div>\n<p>.. cpp:function:: (exec, int, int, double) FindCombinedTileAndTargetValue_AllUnits(exec then, int TargetIndexes, int PathsMap, int TileValues, double TargetValues)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Finds the best tile to use the ability from on all input targets, and returns the combined value of the tile and the target for each\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Finds the best tile to use the ability from on all input targets, and returns the combined value of the tile and the target for each\n\n  :arg then: \n  :type then: exec\n  :arg TargetIndexes: \n  :type TargetIndexes: int\n  :arg PathsMap: \n  :type PathsMap: int\n  :arg TileValues: \n  :type TileValues: int\n  :arg TargetValues: \n  :type TargetValues: double\n  :returns execute: \n  :rtype execute: exec\n  :returns TargetIndex:  (Default: 0)\n  :rtype TargetIndex: int\n  :returns MoveTargetIndex:  (Default: 0)\n  :rtype MoveTargetIndex: int\n  :returns CombinedValue:  (Default: 0.0)\n  :rtype CombinedValue: double</code></pre></div>\n<p>.. cpp:function:: (exec, exec) UpdateAttributes(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Updates range, minimum range and diamond shaped visibility of this ability to be the same as these values in the owning unit, if so specified by bUseUnitAttributes\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  Updates range, minimum range and diamond shaped visibility of this ability to be the same as these values in the owning unit, if so specified by bUseUnitAttributes\n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, exec) PayMoveAPCost(exec then, int TargetGridIndex, int PathsMap, EMoveCost CostType=NewEnumerator0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: If the ability includes movement in addition to its main effect, this function can be used to pay an AP cost specific to movement. The cost is defined by the MoveCost variable of this attribute\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  If the ability includes movement in addition to its main effect, this function can be used to pay an AP cost specific to movement. The cost is defined by the MoveCost variable of this attribute\n\n  :arg then: \n  :type then: exec\n  :arg TargetGridIndex: \n  :type TargetGridIndex: int\n  :arg PathsMap: \n  :type PathsMap: int\n  :arg CostType:  (Default: NewEnumerator0)\n  :type CostType: EMoveCost\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, exec, exec) DefaultClick(exec then, int GridIndex, Vector Location)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: By default switches to a clicked unit. Meant to be used if we want a general effect that is shared among several abilities. If so, this function can be called from any ability where a specific effect is not specified.\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  By default switches to a clicked unit. Meant to be used if we want a general effect that is shared among several abilities. If so, this function can be called from any ability where a specific effect is not specified.\n\n  :arg then: \n  :type then: exec\n  :arg GridIndex: \n  :type GridIndex: int\n  :arg Location: \n  :type Location: Vector\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, bool) ExecuteAbility(exec then, int TargetIndexIn)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg TargetIndexIn: \n  :type TargetIndexIn: int\n  :returns execute: \n  :rtype execute: exec\n  :returns bSuccess:  (Default: true)\n  :rtype bSuccess: bool</code></pre></div>\n<p>.. cpp:function:: (exec, bool) CheckIfValidTarget(exec then, int ClickedIndex)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg ClickedIndex: \n  :type ClickedIndex: int\n  :returns execute: \n  :rtype execute: exec\n  :returns bValid:  (Default: false)\n  :rtype bValid: bool</code></pre></div>\n<p>.. cpp:function:: exec SignalAbilityExecuted(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, int) FindVisibleTargetsInAbilityRange(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns UnitIndexes: \n  :rtype UnitIndexes: int</code></pre></div>\n<p>.. cpp:function:: (exec, int) QueueDisplayVisibleTilesInAbilityRange(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns TilesInRange: \n  :rtype TilesInRange: int</code></pre></div>\n<p>.. cpp:function:: exec QueueDisplayRangeMarkersOnSpecifiedTiles(exec then, int GridIndexes)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg GridIndexes: \n  :type GridIndexes: int\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, exec) RunDefaultPlayerActivation(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, bool, exec, bool) RunDefaultAbilityExecution(exec then, int ClickedIndex)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg ClickedIndex: \n  :type ClickedIndex: int\n  :returns execute: \n  :rtype execute: exec\n  :returns bSuccess:  (Default: false)\n  :rtype bSuccess: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns bSuccess:  (Default: true)\n  :rtype bSuccess: bool</code></pre></div>\n<p>.. cpp:function:: (exec, Vector) GetLocationBetweenUnits(exec then, BP_Unit Unit1, BP_Unit Unit2)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event, Blueprint Pure\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Unit1: \n  :type Unit1: BP_Unit\n  :arg Unit2: \n  :type Unit2: BP_Unit\n  :returns execute: \n  :rtype execute: exec\n  :returns ReturnValue:  (Default: 0, 0, 0)\n  :rtype ReturnValue: Vector</code></pre></div>\n<p>.. cpp:function:: exec DispatchAssessedValue(exec then, double Value)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Value: \n  :type Value: double\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec DisplayTargetMarkerAtIndex(exec then, int GridIndex)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg GridIndex: \n  :type GridIndex: int\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, bool, exec, bool) IsTargetInRangeAndVisible(exec then, int TargetIndexIn)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: Default\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event, Blueprint Pure\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg TargetIndexIn: \n  :type TargetIndexIn: int\n  :returns execute: \n  :rtype execute: exec\n  :returns bVisible:  (Default: false)\n  :rtype bVisible: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns bVisible:  (Default: false)\n  :rtype bVisible: bool</code></pre></div>\n<p>.. cpp:function:: (exec, int) RemoveOccupiedIndexesFromTileIndexes(exec then, int GridIndexes)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg GridIndexes: \n  :type GridIndexes: int\n  :returns execute: \n  :rtype execute: exec\n  :returns FilteredIndexes: \n  :rtype FilteredIndexes: int</code></pre></div>\n<p>.. cpp:function:: (exec, bool, exec, bool) CheckRequirements(exec then, Actor ActivatingActor)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Checks if all requirements are met before activating/evaluating this ability. Requirements should be specified in child blueprints, and could for instance be actors that are referenced by this ability, that we need to ensure exist to prevent errors\n\n  Category: Default\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  Checks if all requirements are met before activating/evaluating this ability. Requirements should be specified in child blueprints, and could for instance be actors that are referenced by this ability, that we need to ensure exist to prevent errors\n\n  :arg then: \n  :type then: exec\n  :arg ActivatingActor: Activating Actor Actor Object Reference\n  :type ActivatingActor: Actor\n  :returns execute: \n  :rtype execute: exec\n  :returns bMeetsRequirements: Meets Requirements Boolean (Default: false)\n  :rtype bMeetsRequirements: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns bMeetsRequirements: Meets Requirements Boolean (Default: false)\n  :rtype bMeetsRequirements: bool</code></pre></div>\n<p>.. cpp:function:: exec AdjustTargetIndexAfterMoveFound(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: void GetOrRunSafetyPregenDone(exec then, bool Success, int SafetyValues)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Success: \n  :type Success: bool\n  :arg SafetyValues: \n  :type SafetyValues: int</code></pre></div>\n<p>.. cpp:function:: void Deactivate(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void ClientDeactivate(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Net, Net Client, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void ClientDisplayTargetMarkerAtLocation(exec then, Vector Location)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Net, Net Client, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Location: \n  :type Location: Vector</code></pre></div>\n<p>.. cpp:function:: void ServerInteract(exec then, bool bValidTile=false, int ClickedIndex=0, Vector Location=0, 0, 0, Key Key, bool bReleased=false, EClickType ClickType=NewEnumerator0, BP_PlayerController_ATBTT CallingPc)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Net, Net Server, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg bValidTile: Valid Tile Boolean (Default: false)\n  :type bValidTile: bool\n  :arg ClickedIndex: Clicked Index Integer (Default: 0)\n  :type ClickedIndex: int\n  :arg Location: Location Vector (Default: 0, 0, 0)\n  :type Location: Vector\n  :arg Key: Key Key Structure\n  :type Key: Key\n  :arg bReleased: Released Boolean (Default: false)\n  :type bReleased: bool\n  :arg ClickType: Click Type EClickType Enum (Default: NewEnumerator0)\n  :type ClickType: EClickType\n  :arg CallingPc: Calling Pc BP Player Controller ATBTT Object Reference\n  :type CallingPc: BP_PlayerController_ATBTT</code></pre></div>\n<p>.. cpp:function:: void Activate(exec then, bool bReassess=false, Actor OwningActor)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg bReassess: Reassess Boolean (Default: false)\n  :type bReassess: bool\n  :arg OwningActor: Owning Actor Actor Object Reference\n  :type OwningActor: Actor</code></pre></div>\n<p>.. cpp:function:: void ServerHover(exec then, bool bValidTile=false, int HoveredTile=0, Vector Location=0, 0, 0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Net, Net Server, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg bValidTile: Valid Tile Boolean (Default: false)\n  :type bValidTile: bool\n  :arg HoveredTile: Hovered Tile Integer (Default: 0)\n  :type HoveredTile: int\n  :arg Location: Location Vector (Default: 0, 0, 0)\n  :type Location: Vector</code></pre></div>\n<p>.. cpp:function:: void OutputAiValue(exec then, double Value)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Value: \n  :type Value: double</code></pre></div>\n<p>.. cpp:function:: void FoundNoValidTarget(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void ClientSetHoverText(exec then, text Name, text HoverText)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Net, Net Client, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Name: \n  :type Name: text\n  :arg HoverText: \n  :type HoverText: text</code></pre></div>\n<p>.. cpp:function:: void AssessAbilityValue(exec then, BP_Unit Unit, int SpecifiedTarget=-1)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Unit: \n  :type Unit: BP_Unit\n  :arg SpecifiedTarget:  (Default: -1)\n  :type SpecifiedTarget: int</code></pre></div>\n<p>.. cpp:function:: void AiActivate(exec then, BP_Unit Unit)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Unit: \n  :type Unit: BP_Unit</code></pre></div>\n<p>.. cpp:function:: void PlayerActivate(exec then, BP_Unit Unit)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Unit: \n  :type Unit: BP_Unit</code></pre></div>\n<p>.. cpp:member:: PointerToUberGraphFrame UberGraphFrame</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: \n\n  Access Modifier: \n  Flags: Zero Constructor, Transit, Duplicate Transient\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: BP_Unit OwningUnit</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int Range</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int MinRange</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int APCost</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Set PossibleTargets</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int DefaultCharges</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int DefaultCooldown</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Texture Icon</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: LinearColor IconHoverColor</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: MulticastInlineDelegate OnAbilityAssesmentDone</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Blueprint Assignable, Blueprint Callable\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double ValueModifier</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bDiamondShapedVisibility</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bUseOnAllies</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bCanTargetSelf</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int EvaluationLoopsPerTick</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bUseSlowLoops</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array PossibleMoveTargets</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int MoveTargetIndex</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bUsePregeneratedSafetyValues</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bUsePregeneratedPaths</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bUseTileValues</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array TargetIndexes</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array TargetValues</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bUseUnitAttributes</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bDisplayInvalidTiles</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bUseEndsTurn</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int PossibleMove</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Map StoredPathsMap</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int8 MoveCostType</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int StaticMoveCost</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double AIActivationDelay</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Map TileValues</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double EvaluationLoopDelay</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double Damage</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int SuggestedMoveTargetIndex</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bSuggestHover</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int SuggestedTargetIndex</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double TileInRangeZOffset</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: MaterialInterface TileMarkersDecal</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bOnlyTargetBigUnitCenter</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array MarkerDecals</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance, Contains Instanced Reference\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: PointerToUberGraphFrame UberGraphFrame</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: \n\n  Access Modifier: \n  Flags: Zero Constructor, Transit, Duplicate Transient\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: SceneComponent DefaultSceneRoot</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Vector HoveredLocation</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Vector BigUnitOffset</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int PreviousHoverIndex</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: BP_GridManager GridManagerRef</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int HoveredTile</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Vector ClickedLocation</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int TargetIndex</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Actor OwningActor</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int ClickedIndex</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bEnableHover</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bUseBigOffset</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bUseHoverMarker</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: BP_GridUI GridUIRef</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Class GridUIOverride</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Actor MarkedActor</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bCheckForPuppets</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Vector PreviousHoveredLocation</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>","frontmatter":{"title":"BP_Ability","date":"September 28, 2024","description":" Parent of all ability blueprints. Handles both displaying and executing the ability for players as well as calculating the value of its use for AI units."}},"previous":{"fields":{"slug":"/BP_AbilityBase_FreeRoam/"},"frontmatter":{"title":"BP_AbilityBase_FreeRoam"}},"next":{"fields":{"slug":"/BPI_Interact/"},"frontmatter":{"title":"BPI_Interact"}}},"pageContext":{"id":"0d6c2909-8ec0-5cfd-9db1-9fdba34972b3","previousPostId":"6ed942a9-59c6-590c-9030-fbff27a1e2a2","nextPostId":"2270f64e-67e3-5972-ace0-951090649022"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}