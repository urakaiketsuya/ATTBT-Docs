{"componentChunkName":"component---src-templates-blog-post-js","path":"/BP_GridManager_Hex/","result":{"data":{"site":{"siteMetadata":{"title":"Advanced Turn Based Tile Toolkit"}},"markdownRemark":{"id":"35e3e323-7ee6-5308-b92f-6cc9560f4de9","excerpt":"BP_GridManager_Hex Path: /Game/AdvancedTurnBasedTileToolkit/Core/Grid/BP_GridManager_Hex .. cpp:class:: BP_GridManager_Hex : public BP_GridManager_C Child of BPâ€¦","html":"<h1>BP_GridManager_Hex</h1>\n<p>Path: /Game/AdvancedTurnBasedTileToolkit/Core/Grid/BP_GridManager_Hex</p>\n<p>.. cpp:class:: BP_GridManager_Hex : public BP_GridManager_C</p>\n<p>Child of BP_GridManager which overrides certain functions to enable hexagonal grids.</p>\n<p>.. cpp:function:: void Construction_Script(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Construction script, the place to spawn components and do other setup. @note Name used in CreateBlueprint function\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Event, Blueprint Callable, Blueprint Event\n\n  Construction script, the place to spawn components and do other setup. @note Name used in CreateBlueprint function\n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: (exec, bool, exec, bool, exec, bool) AddGridLocations(exec then, int StartIndex=0, int NumTilesX=0, int NumTilesY=0, EHeight HeightmapType=NewEnumerator0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: Startup\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg StartIndex: Start Index Integer (Default: 0)\n  :type StartIndex: int\n  :arg NumTilesX: Num Tiles X Integer (Default: 0)\n  :type NumTilesX: int\n  :arg NumTilesY: Num Tiles Y Integer (Default: 0)\n  :type NumTilesY: int\n  :arg HeightmapType: Heightmap Type EHeight Enum (Default: NewEnumerator0)\n  :type HeightmapType: EHeight\n  :returns execute: \n  :rtype execute: exec\n  :returns bSuccess: Success Boolean (Default: false)\n  :rtype bSuccess: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns bSuccess: Success Boolean (Default: false)\n  :rtype bSuccess: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns bSuccess: Success Boolean (Default: false)\n  :rtype bSuccess: bool</code></pre></div>\n<p>.. cpp:function:: (exec, double, double) ConvertGridCoordToOffsetLocation(exec then, int CoordX, int CoordY)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: Miscellaneous\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event, Blueprint Pure\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg CoordX: \n  :type CoordX: int\n  :arg CoordY: \n  :type CoordY: int\n  :returns execute: \n  :rtype execute: exec\n  :returns X:  (Default: 0.0)\n  :rtype X: double\n  :returns Y:  (Default: 0.0)\n  :rtype Y: double</code></pre></div>\n<p>.. cpp:function:: (exec, int) GetTileBaseEdges(exec then, int GridIndex=0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Returns the default relative grid indexes representing the default neighbors for any tile. Must be added to a grid index value after this function to get the actual neighbors\n\n  Category: Miscellaneous\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Returns the default relative grid indexes representing the default neighbors for any tile. Must be added to a grid index value after this function to get the actual neighbors\n\n  :arg then: \n  :type then: exec\n  :arg GridIndex: Grid Index Integer (Default: 0)\n  :type GridIndex: int\n  :returns execute: \n  :rtype execute: exec\n  :returns BaseEdges: Base Edges Array of Integers\n  :rtype BaseEdges: int</code></pre></div>\n<p>.. cpp:function:: (exec, int) ConvertLocationToIndex3DNaive(exec then, Vector Vector=0, 0, 0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Gets a location and finds the closest corresponding location. Does not take overlapping tiles into account\n\n  Category: Utility\n\n  Access Modifier: Public\n\n  Constant: True\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event, Blueprint Pure\n\n  Gets a location and finds the closest corresponding location. Does not take overlapping tiles into account\n\n  :arg then: \n  :type then: exec\n  :arg Vector: Vector Vector (Default: 0, 0, 0)\n  :type Vector: Vector\n  :returns execute: \n  :rtype execute: exec\n  :returns Index: Index Integer (Default: 0)\n  :rtype Index: int</code></pre></div>\n<p>.. cpp:function:: (exec, int) FindDistanceIinTilesBetweenIndexes(exec then, int Index1=0, int Index2=0, bool DiamondShaped=false)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Finds number of tiles separating two tile indexes. (renamed from Find Distance (in Tiles) Between Indexes)\n\n  Category: Utility\n\n  Access Modifier: Public\n\n  Constant: True\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event, Blueprint Pure\n\n  Finds number of tiles separating two tile indexes. (renamed from Find Distance (in Tiles) Between Indexes)\n\n  :arg then: \n  :type then: exec\n  :arg Index1: Index 1 Integer (Default: 0)\n  :type Index1: int\n  :arg Index2: Index 2 Integer (Default: 0)\n  :type Index2: int\n  :arg DiamondShaped: Diamond Shaped Boolean (Default: false)\n  :type DiamondShaped: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns Distance: Distance Integer (Default: 0)\n  :rtype Distance: int</code></pre></div>\n<p>.. cpp:function:: (exec, int, exec, int) GetIndexesInRange(exec then, int StartIndex=0, int Range=0, bool bDiamondShaped=false, bool bAllLevels=false, int MinRange=0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Gets all grid indexes within a set range of a tile index\n\n  Category: Visibility\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Gets all grid indexes within a set range of a tile index\n\n  :arg then: \n  :type then: exec\n  :arg StartIndex: Start Index Integer (Default: 0)\n  :type StartIndex: int\n  :arg Range: Range Integer (Default: 0)\n  :type Range: int\n  :arg bDiamondShaped: Diamond Shaped Boolean (Default: false)\n  :type bDiamondShaped: bool\n  :arg bAllLevels: All Levels Boolean (Default: false)\n  :type bAllLevels: bool\n  :arg MinRange: Min Range Integer (Default: 0)\n  :type MinRange: int\n  :returns execute: \n  :rtype execute: exec\n  :returns InRangeTiles: In Range Tiles Array of Integers\n  :rtype InRangeTiles: int\n  :returns execute: \n  :rtype execute: exec\n  :returns InRangeTiles: In Range Tiles Array of Integers\n  :rtype InRangeTiles: int</code></pre></div>\n<p>.. cpp:function:: (exec, IntVector, int, int, int) ConvertOffsetToCube(exec then, int GridIndex)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: Miscellaneous\n\n  Access Modifier: Public\n\n  Constant: True\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event, Blueprint Pure\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg GridIndex: \n  :type GridIndex: int\n  :returns execute: \n  :rtype execute: exec\n  :returns CubeCoords: \n  :rtype CubeCoords: IntVector\n  :returns CubeCoords_X:  (Default: 0)\n  :rtype CubeCoords_X: int\n  :returns CubeCoords_Y:  (Default: 0)\n  :rtype CubeCoords_Y: int\n  :returns CubeCoords_Z:  (Default: 0)\n  :rtype CubeCoords_Z: int</code></pre></div>\n<p>.. cpp:function:: (exec, bool) FindAndStoreTileScale(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Looks at the default tile mesh and scales tile size to fit\n\n  Category: Startup\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  Looks at the default tile mesh and scales tile size to fit\n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns bSuccess: Success Boolean (Default: true)\n  :rtype bSuccess: bool</code></pre></div>\n<p>.. cpp:function:: (exec, Vector, double, double) SetCollisionPlaneAndHeightmapBoxScaleAndLocation(exec then, bool bOverrideSize=false, int SizeXOverride=0, int SizeYOverride=0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Scales the collision box and heightmap box to cover the entire grid\n\n  Category: Startup\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event, Blueprint Pure\n\n  Scales the collision box and heightmap box to cover the entire grid\n\n  :arg then: \n  :type then: exec\n  :arg bOverrideSize: Override Size Boolean (Default: false)\n  :type bOverrideSize: bool\n  :arg SizeXOverride: Size XOverride Integer (Default: 0)\n  :type SizeXOverride: int\n  :arg SizeYOverride: Size YOverride Integer (Default: 0)\n  :type SizeYOverride: int\n  :returns execute: \n  :rtype execute: exec\n  :returns Location: Location Vector (Default: 0, 0, 0)\n  :rtype Location: Vector\n  :returns ScaleX: Scale X Float (double-precision) (Default: 0.0)\n  :rtype ScaleX: double\n  :returns ScaleY: Scale Y Float (double-precision) (Default: 0.0)\n  :rtype ScaleY: double</code></pre></div>\n<p>.. cpp:function:: (exec, Vector) GetDisplayTileLocationFromIndex(exec then, int Index=0, int SizeX=0, int SizeY=0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Converts an index to a location before GridLocations has been generated. If GridLocations has been created, generally use it instead\n\n  Category: Startup\n\n  Access Modifier: Public\n\n  Constant: True\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event, Blueprint Pure\n\n  Converts an index to a location before GridLocations has been generated. If GridLocations has been created, generally use it instead\n\n  :arg then: \n  :type then: exec\n  :arg Index: Index Integer (Default: 0)\n  :type Index: int\n  :arg SizeX: Size X Integer (Default: 0)\n  :type SizeX: int\n  :arg SizeY: Size Y Integer (Default: 0)\n  :type SizeY: int\n  :returns execute: \n  :rtype execute: exec\n  :returns ReturnValue: Return Value Vector  Converts an index to a location before GridLocations has been generated. If GridLocations has been created, generally use it instead (Default: 0, 0, 0)\n  :rtype ReturnValue: Vector</code></pre></div>\n<p>.. cpp:function:: (exec, Vector) FindClosestTileToSnapTo(exec then, Vector Location=0, 0, 0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Rounds off a location to the closest tile center\n\n  Category: Miscellaneous\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  Rounds off a location to the closest tile center\n\n  :arg then: \n  :type then: exec\n  :arg Location: Location Vector (Default: 0, 0, 0)\n  :type Location: Vector\n  :returns execute: \n  :rtype execute: exec\n  :returns SnapLocation: Snap Location Vector (Default: 0, 0, 0)\n  :rtype SnapLocation: Vector</code></pre></div>\n<p>.. cpp:function:: (exec, int, int, exec, int, int) DecideFinalTargetFromViableOptions(exec then, int TargetUnitIndex=0, bool Randomize=false, FRange MoveChoiceCandidates, int PathsMap)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Decide the final target from viable options and find the path to this tile\n\n  Category: Pathfinding\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Decide the final target from viable options and find the path to this tile\n\n  :arg then: \n  :type then: exec\n  :arg TargetUnitIndex: Target Unit Index Integer (Default: 0)\n  :type TargetUnitIndex: int\n  :arg Randomize: Randomize Boolean (Default: false)\n  :type Randomize: bool\n  :arg MoveChoiceCandidates: Move Choice Candidates Array of FRange Structures\n  :type MoveChoiceCandidates: FRange\n  :arg PathsMap: Paths Map Map of Integers to FPathfinding Structures\n  :type PathsMap: int\n  :returns execute: \n  :rtype execute: exec\n  :returns TargetIndex: Target Index Integer (Default: 0)\n  :rtype TargetIndex: int\n  :returns TargetValue: Target Value Integer (Default: 0)\n  :rtype TargetValue: int\n  :returns execute: \n  :rtype execute: exec\n  :returns TargetIndex: Target Index Integer (Default: 0)\n  :rtype TargetIndex: int\n  :returns TargetValue: Target Value Integer (Default: 0)\n  :rtype TargetValue: int</code></pre></div>\n<p>.. cpp:function:: (exec, FTwoInts) GetCrossingCornerEdges(exec then, int GridIndex=0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Finds the tile/edge pairs representing the connections that cross the edges of this tile. Used for blocking off corners so that units cannot clip through corners of tiles when moving diagonally past a solid wall.\n\n  Category: Startup\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Finds the tile/edge pairs representing the connections that cross the edges of this tile. Used for blocking off corners so that units cannot clip through corners of tiles when moving diagonally past a solid wall.\n\n  :arg then: \n  :type then: exec\n  :arg GridIndex: Grid Index Integer (Default: 0)\n  :type GridIndex: int\n  :returns execute: \n  :rtype execute: exec\n  :returns CornerEdges: Corner Edges Array of FTwo Ints Structures\n  :rtype CornerEdges: FTwoInts</code></pre></div>\n<p>.. cpp:function:: (exec, int) GetTileInDirection(exec then, int GridIndex=0, EDirection Direction=NewEnumerator0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Returns the neigbor of the input tile in the selected direction\n\n  Category: Utility\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Returns the neigbor of the input tile in the selected direction\n\n  :arg then: \n  :type then: exec\n  :arg GridIndex: Grid Index Integer (Default: 0)\n  :type GridIndex: int\n  :arg Direction: Direction EDirection Enum (Default: NewEnumerator0)\n  :type Direction: EDirection\n  :returns execute: \n  :rtype execute: exec\n  :returns ReturnIndex: Return Index Integer (Default: 0)\n  :rtype ReturnIndex: int</code></pre></div>\n<p>.. cpp:function:: (exec, Vector) FindClosestTileToSnapToTrace(exec then, Vector Location=0, 0, 0, Actor ActorsToIgnore)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Rounds off a location to the closest tile center, tracing for the ground to set the Z location.\n\n  Category: Miscellaneous\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Rounds off a location to the closest tile center, tracing for the ground to set the Z location.\n\n  :arg then: \n  :type then: exec\n  :arg Location: Location Vector (Default: 0, 0, 0)\n  :type Location: Vector\n  :arg ActorsToIgnore: Actors to Ignore Array of Actor Object References\n  :type ActorsToIgnore: Actor\n  :returns execute: \n  :rtype execute: exec\n  :returns SnapLocation: Snap Location Vector (Default: 0, 0, 0)\n  :rtype SnapLocation: Vector</code></pre></div>\n<p>.. cpp:function:: (exec, int) SetupBaseEdges(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Filles the BaseEdges array with the appropriate relative indexes of neighbor tiles\n\n  Category: Startup\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Filles the BaseEdges array with the appropriate relative indexes of neighbor tiles\n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns BaseEdges: Base Edges Array of Integers\n  :rtype BaseEdges: int</code></pre></div>\n<p>.. cpp:function:: (exec, bool, exec, bool, exec, bool) SpawnTileGrid(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Spawns Tile Instnced meshes in a grid pattern based on grid size and type\n\n  Category: Startup\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Spawns Tile Instnced meshes in a grid pattern based on grid size and type\n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns bSuccess: Success Boolean (Default: false)\n  :rtype bSuccess: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns bSuccess: Success Boolean (Default: true)\n  :rtype bSuccess: bool\n  :returns execute: \n  :rtype execute: exec\n  :returns bSuccess: Success Boolean (Default: true)\n  :rtype bSuccess: bool</code></pre></div>\n<p>.. cpp:function:: (exec, int, exec, int) GetAllGridIndexesNaive(exec then, int NumTilesX=0, int NumTilesY=0, int GridIndexOffset=0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Returns all grid indexes in a specified rectangular area and offset by a specified grid index. Purely math based and does not use any generated grid data\n\n  Category: Startup\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  Returns all grid indexes in a specified rectangular area and offset by a specified grid index. Purely math based and does not use any generated grid data\n\n  :arg then: \n  :type then: exec\n  :arg NumTilesX: Num Tiles X Integer (Default: 0)\n  :type NumTilesX: int\n  :arg NumTilesY: Num Tiles Y Integer (Default: 0)\n  :type NumTilesY: int\n  :arg GridIndexOffset: Grid Index Offset Integer (Default: 0)\n  :type GridIndexOffset: int\n  :returns execute: \n  :rtype execute: exec\n  :returns GridIndexes: Grid Indexes Array of Integers\n  :rtype GridIndexes: int\n  :returns execute: \n  :rtype execute: exec\n  :returns GridIndexes: Grid Indexes Array of Integers\n  :rtype GridIndexes: int</code></pre></div>\n<p>.. cpp:function:: (exec, Vector) ConvertIndexToLocationNaive(exec then, int GridIndex=0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: Startup\n\n  Access Modifier: Public\n\n  Constant: True\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event, Blueprint Pure\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg GridIndex: Grid Index Integer (Default: 0)\n  :type GridIndex: int\n  :returns execute: \n  :rtype execute: exec\n  :returns Location: Location Vector (Default: 0, 0, 0)\n  :rtype Location: Vector</code></pre></div>\n<p>.. cpp:function:: (exec, exec) SetupHeightmapBox(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Scale and Position HeightmapBox. Is used to show the the maximum and minimum Z locations on which heightmap tracing is used\n\n  Category: Startup\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  Scale and Position HeightmapBox. Is used to show the the maximum and minimum Z locations on which heightmap tracing is used\n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec SetupCollisionPlane(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Scale and position the collision plane. This makes individual collision volumes unecessary for flat grids, and makes it possible to place meshes in the viewport if the default tile is invisible\n\n  Category: Startup\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  Scale and position the collision plane. This makes individual collision volumes unecessary for flat grids, and makes it possible to place meshes in the viewport if the default tile is invisible\n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, exec) SetupGridCollision(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Individual collision for each tile is disabled</code></pre></div>\n<p>at runtime for performance reasons. the collision\rplane does the same thing cheaper.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Startup\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  Individual collision for each tile is disabled</code></pre></div>\n<p>at runtime for performance reasons. the collision\rplane does the same thing cheaper.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, exec) SetupGridLineDisplay(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: If EnableGridLineDisplay is true, displays a decal showing grid lines on square grids, encompassing the size of the grid\n\n  Category: Miscellaneous\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  If EnableGridLineDisplay is true, displays a decal showing grid lines on square grids, encompassing the size of the grid\n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, int, int, int, exec, int, int, int, exec, int, int, int) RoundCubeCoordinates(exec then, double X, double Y, double Z)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: Utility\n\n  Access Modifier: Public\n\n  Constant: True\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg X: \n  :type X: double\n  :arg Y: \n  :type Y: double\n  :arg Z: \n  :type Z: double\n  :returns execute: \n  :rtype execute: exec\n  :returns CubeX:  (Default: 0)\n  :rtype CubeX: int\n  :returns CubeY:  (Default: 0)\n  :rtype CubeY: int\n  :returns CubeZ:  (Default: 0)\n  :rtype CubeZ: int\n  :returns execute: \n  :rtype execute: exec\n  :returns CubeX:  (Default: 0)\n  :rtype CubeX: int\n  :returns CubeY:  (Default: 0)\n  :rtype CubeY: int\n  :returns CubeZ:  (Default: 0)\n  :rtype CubeZ: int\n  :returns execute: \n  :rtype execute: exec\n  :returns CubeX:  (Default: 0)\n  :rtype CubeX: int\n  :returns CubeY:  (Default: 0)\n  :rtype CubeY: int\n  :returns CubeZ:  (Default: 0)\n  :rtype CubeZ: int</code></pre></div>\n<p>.. cpp:member:: StaticMeshComponent CollisionPlaneHex</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array BaseEdgesOdd</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array BaseEdgesEven</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bHexShapedGrid</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double HexSpokeLength</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: PointerToUberGraphFrame UberGraphFrame</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: \n\n  Access Modifier: \n  Flags: Zero Constructor, Transit, Duplicate Transient\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: DecalComponent GridDecal</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: HierarchicalInstancedStaticMeshComponent DebugMarker</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: HierarchicalInstancedStaticMeshComponent DefaultTile</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: BoxComponent HeightmapBounds</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: StaticMeshComponent CollisionPlane</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: SceneComponent Scene</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int GridSizeX</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  The size in tiles of the grid in the X dimension</code></pre></div>\n<p>.. cpp:member:: int GridSizeY</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  The size in tiles of the grid in the Y dimension</code></pre></div>\n<p>.. cpp:member:: int GridSizeZ</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Derived\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bShowCollisionPlane</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Shows the collision plane that handles collision for the trace when the player clicks a tile. Make it visible if your default tile is invisible to place actors easily on the grid surface.</code></pre></div>\n<p>.. cpp:member:: bool bCollisionPlaneWalkable</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Is the default tile that makes up the grid walkable? If not, individual walkable tiles must be placed.</code></pre></div>\n<p>.. cpp:member:: bool bShowDefaultTile</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Will the default tile, and thus the initial grid, be visible?</code></pre></div>\n<p>.. cpp:member:: int8 Heightmap</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Procedural\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  false = no heightmap; OneLevel = traces from the sky (at MaxGridHeight) to the center of each tile once to generate a single layer heightmap; Multilevel = Traces from sky to each tile center, then continues downward and adds a level for each level found that is further from the previous than HeightBetweenLevels until MaxLevels or MinGridHeight is reached</code></pre></div>\n<p>.. cpp:member:: bool bTraceForWalls</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Procedural\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Automaticalle traces between all adjacent tiles using RangeTrace and removes the edge between tiles if the trace hits.</code></pre></div>\n<p>.. cpp:member:: double TraceForWallsHeight</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Procedural\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  The height at which the Trace for Walls function should check for walls between tiles</code></pre></div>\n<p>.. cpp:member:: bool bAutoEdgeCostsBasedOnHeight</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Procedural\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Compares height of all adjacent tiles and sets walkability to false if the difference is more that HeightImpassableCutoff and to difference/heightSlowIncrement if lower than HeightImpassableCutoff but lower that HeightSlowIncrement</code></pre></div>\n<p>.. cpp:member:: double HeightImpassableCutoff</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Procedural\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  See AutoHeightBasedEdgeCosts</code></pre></div>\n<p>.. cpp:member:: double HeightSlowIncrement</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Procedural\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  See AutoHeightBasedEdgeCosts</code></pre></div>\n<p>.. cpp:member:: StaticMesh DefaultTileMesh</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Mesh used to populate the ground level of a grid</code></pre></div>\n<p>.. cpp:member:: Class GridUIClass</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Class DefaultPathfindingType</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bDiagonalMovement</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  If set to false tiles will not be connected to diagonal tiles by default</code></pre></div>\n<p>.. cpp:member:: bool bDebugPregenerateGameplayGrids</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Debug\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Generates some of the grids used for gameplay in the construction scripts for debugging purposes (check this along with DisplayTileIndexes and DisplayTileEdges to visualize this data in editor)</code></pre></div>\n<p>.. cpp:member:: bool bDebugDisplayTileIndexes</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Debug\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  For debugging. Displays the tile indexes of all tiles in the viewport. Pregenerate Gameplay Grids must be set to true for this to work.</code></pre></div>\n<p>.. cpp:member:: bool bDebugDisplayTileEdges</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Debug\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  For debugging. Displays the edges of all tiles in the viewport. Pregenerate Gameplay Grids must be set to true for this to work.</code></pre></div>\n<p>.. cpp:member:: double VisibilityTraceHeight</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  The height of the visibility tracing of pawns</code></pre></div>\n<p>.. cpp:member:: bool bGridSetupDone</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Miscellaneous\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Net, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double TileXSize</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Miscellaneous\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Size in X dimension of the default tile (cm)</code></pre></div>\n<p>.. cpp:member:: Array ISMTiles</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Derived\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance, Contains Instanced Reference\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array ISMMeshes</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Derived\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array ISMMaterials</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Derived\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bFoundNoMaterialMatch</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: DO NDerivedOT EDIT\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double TileYSize</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Miscellaneous\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double MaxGridHeight</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Procedural\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  The height above the Grid Manager from which traces are done to find walkability. Meshes above this height will not be checked</code></pre></div>\n<p>.. cpp:member:: double MinGridHeight</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Procedural\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  The height below the Grid Manager from which traces are done to find walkability. Meshes below this height will not be checked</code></pre></div>\n<p>.. cpp:member:: int8 ShowHeightmapBoundingBox</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Procedural\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Shows a bounding box displaying the maximum and minimum Z location the Grid Manager will check for walkable tiles when using heightmaps.</code></pre></div>\n<p>.. cpp:member:: double HeightBetweenLevels</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Procedural\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  The minimum distance that must separate two levels on a multi-level grid</code></pre></div>\n<p>.. cpp:member:: InstancedStaticMeshComponent ArrowFlat</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Instanced Reference, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int MaxLevels</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Procedural\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  If heightmap is set to multilevel, designates the maximum number of levels that will be generated. Any levels above this will be ignored. I recommend not having this higher than the maximum number of levels you want for your map, as this causes unneccessary processing.</code></pre></div>\n<p>.. cpp:member:: Array ReachableTileMarkers</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Procedural\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible\n  Lifetime Condition: None\n\n  Requires pregenerating gameplay grids. Add elements to this array and position them using widgets to specify what areas of a map can be reached. Is not necessary, but will prevent the hover marker from showing over tiles the player cannot reach. Uses pathfinding to find all tiles reachable from the specified locations, and removes all else from the grid.</code></pre></div>\n<p>.. cpp:member:: MulticastInlineDelegate OnUnitEnterTileSimulate</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Blueprint Assignable, Blueprint Callable\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: MulticastInlineDelegate OnUnitExitTileSimulate</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Blueprint Assignable, Blueprint Callable\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Map GridUnits</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: GridArrays\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  Holds the grid index location of all units</code></pre></div>\n<p>.. cpp:member:: BP_ATBTT_State GameStateRef</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: References\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: BP_TurnManager TurnManager</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: References\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Set SearchedTiles</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Miscellaneous\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  Stores GridIndexes of all tiles that have been search during one Pathfinding</code></pre></div>\n<p>.. cpp:member:: Map GridLocations</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: GridArrays\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  Holds the location of all tile indexes. To instead go from location to index use the Vector To Index macro.</code></pre></div>\n<p>.. cpp:member:: bool bGridHasHoles</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Miscellaneous\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Map GridBigIndexes</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: GridArrays\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int MaxUnitSize</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  0 means big units are disabled. The maximum size of unit that the grid will genrate walkability for. What each size represents is defined in GenerateBigUnitArray function.</code></pre></div>\n<p>.. cpp:member:: Map GridSimpleCosts</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: GridArrays\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array BigSizeIndexes</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Miscellaneous\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Map GridBigSizeMods</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: GridArrays\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bUseSimpleCosts</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Expose On Spawn, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  If true, an extra map is used for walkability in addition to GridEdges, which allows tiles to have global costs, which can be simpler to work with, particularly for games requiring lots of live walkability modification. Interacts with the pathfinding types starting with Simple</code></pre></div>\n<p>.. cpp:member:: MulticastInlineDelegate OnUnitEndMovementSimulate</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Blueprint Assignable, Blueprint Callable\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Map GridObjects</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: GridArrays\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  Unused in the base toolkit, but useful for adding custom tile functionality</code></pre></div>\n<p>.. cpp:member:: Array BigSizeIndexesOdd</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Miscellaneous\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bSnapToCustomGrid</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  If true, GridActors will snap to the center of grid tiles when dragged in the viewport</code></pre></div>\n<p>.. cpp:member:: int IndexZ</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Miscellaneous\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int IndexX</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Miscellaneous\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Map GridEdges</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: GridArrays\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array BaseEdges</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Miscellaneous\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double DefaultTileWidth</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Miscellaneous\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Map HeightMapLevels</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: GridArrays\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Map SpecialEdges</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: GridArrays\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int8 PathTraceChannel</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Channel used to trace for walkable tiles</code></pre></div>\n<p>.. cpp:member:: int8 RangeTraceChannel</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Channel used to trace for collison that blocks line of sight for units</code></pre></div>\n<p>.. cpp:member:: int8 WallTraceChannel</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  Channel used to trace for collison that blocks pathfinding. Used if bTraceForWalls is true.</code></pre></div>\n<p>.. cpp:member:: Map PathfindingTypes</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Miscellaneous\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array AutoScaledVolumes</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Template\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: FDebugTime DebugTime</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Miscellaneous\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double GridLineThickness</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridLineDisplay\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: LinearColor GridLineColor</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridLineDisplay\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double GridLineOpacity</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridLineDisplay\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool EnableGridLineDisplay</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridLineDisplay\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: MulticastInlineDelegate OnGridSetupDone</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Blueprint Assignable, Blueprint Callable\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: GameplayTagContainer MoveInteractEvents</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, GridOptions\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bDisplayTransformWarning</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Miscellaneous\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bRemoveNarrowDiagonalEdges</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Config, Procedural\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  If enabled, removes diagonal edges where any of the straight edges snaking to the same tile are blocked in either direction. Generally prevents units from being able to cut through wall corners during movement.</code></pre></div>","frontmatter":{"title":"BP_GridManager_Hex","date":"September 28, 2024","description":" Child of BP_GridManager which overrides certain functions to enable hexagonal grids."}},"previous":{"fields":{"slug":"/BP_GridCamera/"},"frontmatter":{"title":"BP_GridCamera"}},"next":{"fields":{"slug":"/BP_GA_Interact_TileTrigger/"},"frontmatter":{"title":"BP_GA_Interact_TileTrigger"}}},"pageContext":{"id":"35e3e323-7ee6-5308-b92f-6cc9560f4de9","previousPostId":"bcd7a6ce-eede-5a31-86cb-42df1dd2790e","nextPostId":"8cd1fe35-97b2-5835-94a9-57d4fbdff572"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}