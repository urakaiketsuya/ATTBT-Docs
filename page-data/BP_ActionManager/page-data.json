{"componentChunkName":"component---src-templates-blog-post-js","path":"/BP_ActionManager/","result":{"data":{"site":{"siteMetadata":{"title":"Advanced Turn Based Tile Toolkit"}},"markdownRemark":{"id":"82733465-58e8-5176-9347-c03eb9a4acef","excerpt":"BP_ActionManager Path: /Game/AdvancedTurnBasedTileToolkit/Core/BP_ActionManager .. cpp:class:: BP_ActionManager : public Actor Loops over an array of Actionâ€¦","html":"<h1>BP_ActionManager</h1>\n<p>Path: /Game/AdvancedTurnBasedTileToolkit/Core/BP_ActionManager</p>\n<p>.. cpp:class:: BP_ActionManager : public Actor</p>\n<p>Loops over an array of Action actors and play them in sequence. One Action Manager is spawned by the GameState at startup and is considered the default Action Manager. When an action is spawned it is automatically added to the queue of this default Action Manager unless specified otherwise.</p>\n<p>.. cpp:function:: void Construction_Script(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Construction script, the place to spawn components and do other setup. @note Name used in CreateBlueprint function\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Required API, Event, Blueprint Event\n\n  Construction script, the place to spawn components and do other setup. @note Name used in CreateBlueprint function\n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: (exec, int) GetLowestGarbageCounter(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns LowestCounter:  (Default: 0)\n  :rtype LowestCounter: int</code></pre></div>\n<p>.. cpp:function:: (exec, int) GetNextQueueIndex(exec then, int CurrentIndex)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event, Blueprint Pure\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg CurrentIndex: \n  :type CurrentIndex: int\n  :returns execute: \n  :rtype execute: exec\n  :returns NextIndex:  (Default: 0)\n  :rtype NextIndex: int</code></pre></div>\n<p>.. cpp:function:: exec AddExistingPlayers(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec QueueDelay(exec then, double Delay=1.000000)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Adds a delay to the action queue. Using an EndDelay for the previous action is preferrable if it achieves the same result, as you'll need to spawn one less action.\n\n  Category: Action\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  Adds a delay to the action queue. Using an EndDelay for the previous action is preferrable if it achieves the same result, as you'll need to spawn one less action.\n\n  :arg then: \n  :type then: exec\n  :arg Delay:  (Default: 1.000000)\n  :type Delay: double\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec QueueSpawnEmitter(exec then, Transform Transform, ParticleSystem EmitterTemplate, bool bAutoDestroy=true, bool bAutoActivateSystem=true, SoundBase Sound, double EndDelay=-1.000000)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Spawns an emitter at the specified location, with an optional input for playing a sound.\n\n  Category: Action\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  Spawns an emitter at the specified location, with an optional input for playing a sound.\n\n  :arg then: \n  :type then: exec\n  :arg Transform: \n  :type Transform: Transform\n  :arg EmitterTemplate: \n  :type EmitterTemplate: ParticleSystem\n  :arg bAutoDestroy:  (Default: true)\n  :type bAutoDestroy: bool\n  :arg bAutoActivateSystem:  (Default: true)\n  :type bAutoActivateSystem: bool\n  :arg Sound: \n  :type Sound: SoundBase\n  :arg EndDelay:  (Default: -1.000000)\n  :type EndDelay: double\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec QueueAttack(exec then, Actor TargetPuppet, Actor SourcePuppet)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Calls on puppet to play an attack animation, ending the action once the puppet calls an animation hit event. Generally you want to have queued an action for displaying damage dealt right after this action, as it only handles animating the attack.\n\n  Category: Action\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  Calls on puppet to play an attack animation, ending the action once the puppet calls an animation hit event. Generally you want to have queued an action for displaying damage dealt right after this action, as it only handles animating the attack.\n\n  :arg then: \n  :type then: exec\n  :arg TargetPuppet: \n  :type TargetPuppet: Actor\n  :arg SourcePuppet: \n  :type SourcePuppet: Actor\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec QueuePlaySound(exec then, SoundBase Sound, Vector Location, double VolumeMultiplier=1.000000, double PitchMultiplier=1.000000, double StartTime, SoundAttenuation AttenuationSettings, SoundConcurrency ConcurrencySettings, double EndDelay=-1.000000)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Plays a sound with the specified settings.\n\n  Category: Action\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  Plays a sound with the specified settings.\n\n  :arg then: \n  :type then: exec\n  :arg Sound: \n  :type Sound: SoundBase\n  :arg Location: \n  :type Location: Vector\n  :arg VolumeMultiplier:  (Default: 1.000000)\n  :type VolumeMultiplier: double\n  :arg PitchMultiplier:  (Default: 1.000000)\n  :type PitchMultiplier: double\n  :arg StartTime: \n  :type StartTime: double\n  :arg AttenuationSettings: \n  :type AttenuationSettings: SoundAttenuation\n  :arg ConcurrencySettings: \n  :type ConcurrencySettings: SoundConcurrency\n  :arg EndDelay:  (Default: -1.000000)\n  :type EndDelay: double\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec AddToVectorArray(exec then, Vector Vectors)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Has Defaults, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Vectors: \n  :type Vectors: Vector\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, Vector) AdvanceAndGetNextVectorArray(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns Vectors: \n  :rtype Vectors: Vector</code></pre></div>\n<p>.. cpp:function:: exec PlayNextAction(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec QueuePrintString(exec then, string InString=QueuedHello, bool bPrintToScreen=true, bool bPrintToLog=true, LinearColor TextColor=(R=1.000000,G=0.329412,B=0.000000,A=1.000000), double Duration=4.000000)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: For printing strings as part of the action queue. For debugging.\n\n  Category: Action\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  For printing strings as part of the action queue. For debugging.\n\n  :arg then: \n  :type then: exec\n  :arg InString:  (Default: QueuedHello)\n  :type InString: string\n  :arg bPrintToScreen:  (Default: true)\n  :type bPrintToScreen: bool\n  :arg bPrintToLog:  (Default: true)\n  :type bPrintToLog: bool\n  :arg TextColor:  (Default: (R=1.000000,G=0.329412,B=0.000000,A=1.000000))\n  :type TextColor: LinearColor\n  :arg Duration:  (Default: 4.000000)\n  :type Duration: double\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: (exec, exec) MoveDestructionQueueIfQueueReset(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec ActionDestructionLoop(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec QueueExternalAction(exec then, Actor ExternalActor, Actor Triggering_Actor, double EndDelay=-1.000000)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Offloads playing the action to a separate actor. Useful when doing complex actions where you would otherwise need to add lots of action inputs. Keep to the same limitations of what to manipulate within the actor as you would within actions. Requires that the External Actor implements BPI_ExternalAction and the ExternalAction component. See BP_GA_DemoDoor for an example.\n\n  Category: Action\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  Offloads playing the action to a separate actor. Useful when doing complex actions where you would otherwise need to add lots of action inputs. Keep to the same limitations of what to manipulate within the actor as you would within actions. Requires that the External Actor implements BPI_ExternalAction and the ExternalAction component. See BP_GA_DemoDoor for an example.\n\n  :arg then: \n  :type then: exec\n  :arg ExternalActor: \n  :type ExternalActor: Actor\n  :arg Triggering_Actor: \n  :type Triggering_Actor: Actor\n  :arg EndDelay:  (Default: -1.000000)\n  :type EndDelay: double\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: exec QueueSpawnActor(exec then, Actor ActorToSpawn, SceneComponent AttachToComponent, Transform ActorSpawnTransform, Actor ActorOwner, double EndDelay=1.000000)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Spawns the specified actor. As this is done in the action queue the actor should only be used for cosmetic event and not for gameplay logic. For actors relevant for gameplay logic it is recommended to not use this action. Instead spawn it without an action on the server and then unhide it as an action.\n\n  Category: Action\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Defaults, Blueprint Callable, Blueprint Event\n\n  Spawns the specified actor. As this is done in the action queue the actor should only be used for cosmetic event and not for gameplay logic. For actors relevant for gameplay logic it is recommended to not use this action. Instead spawn it without an action on the server and then unhide it as an action.\n\n  :arg then: \n  :type then: exec\n  :arg ActorToSpawn: \n  :type ActorToSpawn: Actor\n  :arg AttachToComponent: \n  :type AttachToComponent: SceneComponent\n  :arg ActorSpawnTransform: \n  :type ActorSpawnTransform: Transform\n  :arg ActorOwner: \n  :type ActorOwner: Actor\n  :arg EndDelay:  (Default: 1.000000)\n  :type EndDelay: double\n  :returns execute: \n  :rtype execute: exec</code></pre></div>\n<p>.. cpp:function:: void Tick(exec then, float DeltaSeconds=0.0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Event called every frame, if ticking is enabled\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Event, Blueprint Event\n\n  Event called every frame, if ticking is enabled\n\n  :arg then: \n  :type then: exec\n  :arg DeltaSeconds: Delta Seconds Float (single-precision) (Default: 0.0)\n  :type DeltaSeconds: float</code></pre></div>\n<p>.. cpp:function:: void InitializeActionDestructionLoop(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void AdvanceActionDestructionQueue(exec then, Object CallingAction)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: Default\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg CallingAction: Calling Action Object Reference\n  :type CallingAction: Object</code></pre></div>\n<p>.. cpp:function:: void ProceedFromOngoingAction(exec then, Object OngoingAction, EActionProceedRule ProceedRule=NewEnumerator0)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg OngoingAction: Ongoing Action Object Reference (by ref)\n  :type OngoingAction: Object\n  :arg ProceedRule: Proceed Rule EActionProceedRule Enum (Default: NewEnumerator0)\n  :type ProceedRule: EActionProceedRule</code></pre></div>\n<p>.. cpp:function:: void AddToVectorArrayToManager(exec then, Vector Vectors)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Vectors: Vectors Array of Vectors\n  :type Vectors: Vector</code></pre></div>\n<p>.. cpp:function:: void QueueAction(exec then, Object Action)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Action: Action Object Reference\n  :type Action: Object</code></pre></div>\n<p>.. cpp:function:: void AttemptPlayNextAction(exec then, bool bIgnoreBlockingActions=false)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg bIgnoreBlockingActions: Ignore Blocking Actions Boolean (Default: false)\n  :type bIgnoreBlockingActions: bool</code></pre></div>\n<p>.. cpp:function:: void AddPlayer(exec then, PlayerController Player)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Player: \n  :type Player: PlayerController</code></pre></div>\n<p>.. cpp:function:: void StartActionLoop(exec then, BP_ActionQueueCounter Counter)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: \n\n  Constant: False\n\n  Flags: Has Out Params, Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg Counter: \n  :type Counter: BP_ActionQueueCounter</code></pre></div>\n<p>.. cpp:function:: void BeginPlay(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Event when play begins for this actor.\n\n  Category: \n\n  Access Modifier: Protected\n\n  Constant: False\n\n  Flags: Event, Blueprint Event\n\n  Event when play begins for this actor.\n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void ProceedFromThisAction(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void ForcePlayAction(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void RunOnSkipAction(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void AnimateAction(exec then, BP_ActionManager CallingActionManager)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg CallingActionManager: Calling Action Manager BP Action Manager Object Reference\n  :type CallingActionManager: BP_ActionManager</code></pre></div>\n<p>.. cpp:function:: void EndAction(exec then, bool bAutoProceed=false)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: \n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Blueprint Callable, Blueprint Event\n\n  \n\n  :arg then: \n  :type then: exec\n  :arg bAutoProceed: Auto Proceed Boolean (Default: false)\n  :type bAutoProceed: bool</code></pre></div>\n<p>.. cpp:member:: PointerToUberGraphFrame UberGraphFrame</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: \n\n  Access Modifier: \n  Flags: Zero Constructor, Transit, Duplicate Transient\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: SceneComponent DefaultSceneRoot</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array ActionQueue</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Net, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int ActionCounter</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: MulticastInlineDelegate OnAnimateNewAction</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Blueprint Assignable, Blueprint Callable\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: BP_ActionQueueCounter QueueCounter</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Template, Disable Edit On Instance, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array QueueCounters</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Template, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bPauseQueue</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int InitialQueueSize</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int FillCounter</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Net, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array AddedPlayers</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Template, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array VectorArrays</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Net, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int VectorLoopCounter</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int InitialVectorArraySize</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int VectorArrayFillCounter</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: MulticastInlineDelegate OnActionQueued</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Blueprint Assignable, Blueprint Callable\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: MulticastInlineDelegate OnActionsDestroyed</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Blueprint Assignable, Blueprint Callable\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int OngoingActionsOld</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array PreviousQueue</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Array PendingDestructionObjects</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int DestructionCounter</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Set OngoingActions</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: Set BlockingActions</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Disable Edit On Instance\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: double ActionDestructionDelay</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: MulticastInlineDelegate OnActionDone</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Blueprint Assignable, Blueprint Callable\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: bool bShowDebugDisplay</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int ActionsPlayedThisTick</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: int MaxActionsPerTick</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Edit, Blueprint Visible, Zero Constructor, Disable Edit On Instance, Is Plain Old Data, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>","frontmatter":{"title":"BP_ActionManager","date":"September 28, 2024","description":" Loops over an array of Action actors and play them in sequence. One Action Manager is spawned by the GameState at startup and is considered the default Action Manager. When an action is spawned it is automatically added to the queue of this default Action Manager unless specified otherwise."}},"previous":{"fields":{"slug":"/BP_Action/"},"frontmatter":{"title":"BP_Action"}},"next":{"fields":{"slug":"/BP_Ability_MoveAttack/"},"frontmatter":{"title":"BP_Ability_MoveAttack"}}},"pageContext":{"id":"82733465-58e8-5176-9347-c03eb9a4acef","previousPostId":"d8b1edaf-2614-5bda-ac63-0a8a148c933e","nextPostId":"e0ed904f-4e3b-5881-919e-a56a2385463f"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}