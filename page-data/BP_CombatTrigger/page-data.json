{"componentChunkName":"component---src-templates-blog-post-js","path":"/BP_CombatTrigger/","result":{"data":{"site":{"siteMetadata":{"title":"Advanced Turn Based Tile Toolkit"}},"markdownRemark":{"id":"8d2f5c4c-182f-596b-8475-af263f4af93f","excerpt":"BP_CombatTrigger Path: /Game/AdvancedTurnBasedTileToolkit/Maps/Experimental/Hybrid/BP_CombatTrigger .. cpp:class:: BP_CombatTrigger : public Actor .. cppâ€¦","html":"<h1>BP_CombatTrigger</h1>\n<p>Path: /Game/AdvancedTurnBasedTileToolkit/Maps/Experimental/Hybrid/BP_CombatTrigger</p>\n<p>.. cpp:class:: BP_CombatTrigger : public Actor</p>\n<p>.. cpp:function:: void Construction_Script(exec then)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Construction script, the place to spawn components and do other setup. @note Name used in CreateBlueprint function\n\n  Category: \n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Required API, Event, Blueprint Event\n\n  Construction script, the place to spawn components and do other setup. @note Name used in CreateBlueprint function\n\n  :arg then: \n  :type then: exec</code></pre></div>\n<p>.. cpp:function:: void ActorBeginOverlap(exec then, Actor OtherActor)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Type: Event when this actor overlaps another actor, for example a player walking into a trigger. For events when objects have a blocking collision, for example a player hitting a wall, see 'Hit' events. @note Components on both this and the other Actor must have bGenerateOverlapEvents set to true to generate overlap events.\n\n  Category: Collision\n\n  Access Modifier: Public\n\n  Constant: False\n\n  Flags: Event, Blueprint Event\n\n  Event when this actor overlaps another actor, for example a player walking into a trigger. For events when objects have a blocking collision, for example a player hitting a wall, see 'Hit' events. @note Components on both this and the other Actor must have bGenerateOverlapEvents set to true to generate overlap events.\n\n  :arg then: \n  :type then: exec\n  :arg OtherActor: Other Actor Actor Object Reference\n  :type OtherActor: Actor</code></pre></div>\n<p>.. cpp:member:: PointerToUberGraphFrame UberGraphFrame</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: \n\n  Access Modifier: \n  Flags: Zero Constructor, Transit, Duplicate Transient\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: BoxComponent Box</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>\n<p>.. cpp:member:: SceneComponent DefaultSceneRoot</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  Category: Default\n\n  Access Modifier: \n  Flags: Blueprint Visible, Zero Constructor, Instanced Reference, Non Transactional, No Destructor, Has Get Value Type Hash\n  Lifetime Condition: None\n\n  </code></pre></div>","frontmatter":{"title":"BP_CombatTrigger","date":"October 03, 2024","description":"None."}},"previous":{"fields":{"slug":"/BP_FloatyBoiPlacer/"},"frontmatter":{"title":"BP_FloatyBoiPlacer"}},"next":{"fields":{"slug":"/BP_Character_Puppet_Hybrid/"},"frontmatter":{"title":"BP_Character_Puppet_Hybrid"}}},"pageContext":{"id":"8d2f5c4c-182f-596b-8475-af263f4af93f","previousPostId":"44fbba80-611a-5b52-aacd-f2cf293db3dc","nextPostId":"9638d161-33c3-55f2-8745-16deab84e348"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}